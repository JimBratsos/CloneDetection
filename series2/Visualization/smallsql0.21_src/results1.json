{
  "summary": {
    "project_name": "Project"
  },
  "clone_code_percentage": 5.367994598,
  "biggest_class_members": 9,
  "clone_pairs": [
    {
      "origin": {
        "end_line": 232,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 223,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:\r\n                return getLongImpl();\r\n\t\t\tcase SQLTokenizer.REAL:"
      },
      "id": "clone_1",
      "clone_type": "type-1",
      "clone": {
        "end_line": 274,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 265,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:\r\n                return getLongImpl();\r\n\t\t\tcase SQLTokenizer.REAL:"
      }
    },
    {
      "origin": {
        "end_line": 232,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 223,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:\r\n                return getLongImpl();\r\n\t\t\tcase SQLTokenizer.REAL:"
      },
      "id": "clone_2",
      "clone_type": "type-1",
      "clone": {
        "end_line": 321,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 312,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:\r\n                return getLongImpl();\r\n\t\t\tcase SQLTokenizer.REAL:"
      }
    },
    {
      "origin": {
        "end_line": 274,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 265,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:\r\n                return getLongImpl();\r\n\t\t\tcase SQLTokenizer.REAL:"
      },
      "id": "clone_3",
      "clone_type": "type-1",
      "clone": {
        "end_line": 321,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 312,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:\r\n                return getLongImpl();\r\n\t\t\tcase SQLTokenizer.REAL:"
      }
    },
    {
      "origin": {
        "end_line": 417,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 410,
        "source_code": "con1.createStatement().execute(\"Create Table transactions (i int identity, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from transactions\");\r\n\r\n\t\t\tcon1.setAutoCommit(false);\r\n\t\t\tcon1.createStatement().execute(\"Insert Into transactions(v) Values('qwert2')\");\r\n\r\n\t\t\tResultSet rs2 = con2.createStatement().executeQuery(\"Select count(*) from transactions\");\r\n\t\t\tassertTrue( rs2.next() );"
      },
      "id": "clone_4",
      "clone_type": "type-1",
      "clone": {
        "end_line": 439,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 432,
        "source_code": "con1.createStatement().execute(\"Create Table transactions (i int identity, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from transactions\");\r\n\r\n\t\t\tcon1.setAutoCommit(false);\r\n\t\t\tcon1.createStatement().execute(\"Insert Into transactions(v) Values('qwert2')\");\r\n\r\n\t\t\tResultSet rs2 = con2.createStatement().executeQuery(\"Select count(*) from transactions\");\r\n\t\t\tassertTrue( rs2.next() );"
      }
    },
    {
      "origin": {
        "end_line": 341,
        "file": "/src/smallsql/database/LongTreeList.java",
        "start_line": 331,
        "source_code": "//there are more entries in this node\r\n\t\t\t\tresult |= (((long)nextEntry) << shift);\r\n\t\t\t\tif(listEnum.stack>=3){\r\n\t\t\t\t\tlistEnum.offsetStack[listEnum.stack] = offset;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tlistEnum.offsetStack[listEnum.stack] = offset+pointerSize;\r\n\t\t\t\toffset = getPointer();\r\n\t\t\t\tshift -= 16;\r\n\t\t\t\tlistEnum.stack++;\r\n\t\t\t\tlistEnum.resultStack[listEnum.stack] = result;"
      },
      "id": "clone_5",
      "clone_type": "type-1",
      "clone": {
        "end_line": 386,
        "file": "/src/smallsql/database/LongTreeList.java",
        "start_line": 376,
        "source_code": "//there are more entries in this node\r\n\t\t\t\tresult |= (((long)nextEntry) << shift);\r\n\t\t\t\tif(listEnum.stack>=3){\r\n\t\t\t\t\tlistEnum.offsetStack[listEnum.stack] = offset;\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tlistEnum.offsetStack[listEnum.stack] = offset+pointerSize;\r\n\t\t\t\toffset = getPointer();\r\n\t\t\t\tshift -= 16;\r\n\t\t\t\tlistEnum.stack++;\r\n\t\t\t\tlistEnum.resultStack[listEnum.stack] = result;"
      }
    },
    {
      "origin": {
        "end_line": 280,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 276,
        "source_code": "pr.execute();\r\n        rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",2,rs.getMetaData().getColumnCount());\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_6",
      "clone_type": "type-1",
      "clone": {
        "end_line": 295,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 291,
        "source_code": "pr.execute();\r\n        rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",2,rs.getMetaData().getColumnCount());\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 120,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 116,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_7",
      "clone_type": "type-1",
      "clone": {
        "end_line": 148,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 144,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 120,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 116,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_8",
      "clone_type": "type-1",
      "clone": {
        "end_line": 175,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 171,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 120,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 116,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_9",
      "clone_type": "type-1",
      "clone": {
        "end_line": 203,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 199,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 120,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 116,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_10",
      "clone_type": "type-1",
      "clone": {
        "end_line": 231,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 227,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 120,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 116,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_11",
      "clone_type": "type-1",
      "clone": {
        "end_line": 259,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 255,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 120,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 116,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_12",
      "clone_type": "type-1",
      "clone": {
        "end_line": 285,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 281,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 120,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 116,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_13",
      "clone_type": "type-1",
      "clone": {
        "end_line": 308,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 304,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 120,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 116,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_14",
      "clone_type": "type-1",
      "clone": {
        "end_line": 793,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 789,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 148,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 144,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_15",
      "clone_type": "type-1",
      "clone": {
        "end_line": 175,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 171,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 148,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 144,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_16",
      "clone_type": "type-1",
      "clone": {
        "end_line": 203,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 199,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 148,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 144,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_17",
      "clone_type": "type-1",
      "clone": {
        "end_line": 231,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 227,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 148,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 144,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_18",
      "clone_type": "type-1",
      "clone": {
        "end_line": 259,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 255,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 148,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 144,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_19",
      "clone_type": "type-1",
      "clone": {
        "end_line": 285,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 281,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 148,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 144,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_20",
      "clone_type": "type-1",
      "clone": {
        "end_line": 308,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 304,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 148,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 144,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_21",
      "clone_type": "type-1",
      "clone": {
        "end_line": 793,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 789,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 175,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 171,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_22",
      "clone_type": "type-1",
      "clone": {
        "end_line": 203,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 199,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 175,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 171,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_23",
      "clone_type": "type-1",
      "clone": {
        "end_line": 231,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 227,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 175,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 171,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_24",
      "clone_type": "type-1",
      "clone": {
        "end_line": 259,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 255,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 175,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 171,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_25",
      "clone_type": "type-1",
      "clone": {
        "end_line": 285,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 281,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 175,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 171,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_26",
      "clone_type": "type-1",
      "clone": {
        "end_line": 308,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 304,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 175,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 171,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_27",
      "clone_type": "type-1",
      "clone": {
        "end_line": 793,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 789,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 203,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 199,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_28",
      "clone_type": "type-1",
      "clone": {
        "end_line": 231,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 227,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 203,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 199,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_29",
      "clone_type": "type-1",
      "clone": {
        "end_line": 259,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 255,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 203,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 199,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_30",
      "clone_type": "type-1",
      "clone": {
        "end_line": 285,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 281,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 203,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 199,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_31",
      "clone_type": "type-1",
      "clone": {
        "end_line": 308,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 304,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 203,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 199,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_32",
      "clone_type": "type-1",
      "clone": {
        "end_line": 793,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 789,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 231,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 227,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_33",
      "clone_type": "type-1",
      "clone": {
        "end_line": 259,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 255,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 231,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 227,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_34",
      "clone_type": "type-1",
      "clone": {
        "end_line": 285,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 281,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 231,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 227,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_35",
      "clone_type": "type-1",
      "clone": {
        "end_line": 308,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 304,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 231,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 227,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_36",
      "clone_type": "type-1",
      "clone": {
        "end_line": 793,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 789,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 259,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 255,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_37",
      "clone_type": "type-1",
      "clone": {
        "end_line": 285,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 281,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 259,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 255,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_38",
      "clone_type": "type-1",
      "clone": {
        "end_line": 308,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 304,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 259,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 255,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_39",
      "clone_type": "type-1",
      "clone": {
        "end_line": 793,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 789,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 285,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 281,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_40",
      "clone_type": "type-1",
      "clone": {
        "end_line": 308,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 304,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 285,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 281,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_41",
      "clone_type": "type-1",
      "clone": {
        "end_line": 793,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 789,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 308,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 304,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      },
      "id": "clone_42",
      "clone_type": "type-1",
      "clone": {
        "end_line": 793,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 789,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tString oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 222,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 207,
        "source_code": "assertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\t\r\n\t\tint count = 1;\r\n\t\twhile(oldValue != null && rs.next()){\r\n\t\t\tString newValue = rs.getString(\"v\");\r\n\t\t\tif(newValue != null){\r\n\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\toldValue = newValue;\r\n\t\t}\r\n\t\tassertNull(oldValue);\r\n\t\tassertFalse( rs.next() );\r\n\r\n\t\tassertEquals( valueCount, count );"
      },
      "id": "clone_43",
      "clone_type": "type-1",
      "clone": {
        "end_line": 250,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 235,
        "source_code": "assertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\t\r\n\t\tint count = 1;\r\n\t\twhile(oldValue != null && rs.next()){\r\n\t\t\tString newValue = rs.getString(\"v\");\r\n\t\t\tif(newValue != null){\r\n\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\toldValue = newValue;\r\n\t\t}\r\n\t\tassertNull(oldValue);\r\n\t\tassertFalse( rs.next() );\r\n\r\n\t\tassertEquals( valueCount, count );"
      }
    },
    {
      "origin": {
        "end_line": 188,
        "file": "/src/smallsql/database/Index.java",
        "start_line": 184,
        "source_code": "break;\r\n\t\t\t\t\tcase SQLTokenizer.VARCHAR:\r\n\t\t\t\t\tcase SQLTokenizer.NVARCHAR:\r\n\t\t\t\t\tcase SQLTokenizer.LONGVARCHAR:\r\n\t\t\t\t\tcase SQLTokenizer.LONGNVARCHAR:"
      },
      "id": "clone_44",
      "clone_type": "type-1",
      "clone": {
        "end_line": 263,
        "file": "/src/smallsql/database/Index.java",
        "start_line": 259,
        "source_code": "break;\r\n\t\t\t\t\tcase SQLTokenizer.VARCHAR:\r\n\t\t\t\t\tcase SQLTokenizer.NVARCHAR:\r\n\t\t\t\t\tcase SQLTokenizer.LONGVARCHAR:\r\n\t\t\t\t\tcase SQLTokenizer.LONGNVARCHAR:"
      }
    },
    {
      "origin": {
        "end_line": 90,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 84,
        "source_code": "assertRowCount( 0, \"Select * from transactions\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into transactions(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from transactions\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into transactions(v) Select v From transactions\");\r\n\t\t\tassertRowCount( 2, \"Select * from transactions\");"
      },
      "id": "clone_45",
      "clone_type": "type-1",
      "clone": {
        "end_line": 149,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 143,
        "source_code": "assertRowCount( 0, \"Select * from transactions\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into transactions(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from transactions\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into transactions(v) Select v From transactions\");\r\n\t\t\tassertRowCount( 2, \"Select * from transactions\");"
      }
    },
    {
      "origin": {
        "end_line": 753,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 748,
        "source_code": "case OR:\r\n\t\t\tcase AND:\r\n\t\t\tcase NOT:\r\n\t\t\tcase LIKE:\r\n\t\t\tcase ISNULL:\r\n\t\t\tcase ISNOTNULL:"
      },
      "id": "clone_46",
      "clone_type": "type-1",
      "clone": {
        "end_line": 791,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 786,
        "source_code": "case OR:\r\n\t\t\tcase AND:\r\n\t\t\tcase NOT:\r\n\t\t\tcase LIKE:\r\n\t\t\tcase ISNULL:\r\n\t\t\tcase ISNOTNULL:"
      }
    },
    {
      "origin": {
        "end_line": 260,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 255,
        "source_code": "con.createStatement().execute(\"Create Table transactions ( v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from transactions\");\r\n\r\n\t\t\tassertEquals( 1, con.createStatement().executeUpdate(\"Insert Into transactions(v) Values('qwert')\") );\r\n\t\t\tassertEqualsRsValue(\"qwert\", \"Select * from transactions\");\r\n\t\t\tassertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");"
      },
      "id": "clone_47",
      "clone_type": "type-1",
      "clone": {
        "end_line": 301,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 296,
        "source_code": "con.createStatement().execute(\"Create Table transactions ( v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from transactions\");\r\n\r\n\t\t\tassertEquals( 1, con.createStatement().executeUpdate(\"Insert Into transactions(v) Values('qwert')\") );\r\n\t\t\tassertEqualsRsValue(\"qwert\", \"Select * from transactions\");\r\n\t\t\tassertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");"
      }
    },
    {
      "origin": {
        "end_line": 159,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 152,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\t\r\n\t\tint count = 1;"
      },
      "id": "clone_48",
      "clone_type": "type-1",
      "clone": {
        "end_line": 186,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 179,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\t\r\n\t\tint count = 1;"
      }
    },
    {
      "origin": {
        "end_line": 182,
        "file": "/src/smallsql/database/Index.java",
        "start_line": 175,
        "source_code": "break;\r\n\t\t\t\t\tcase SQLTokenizer.BIGINT:\r\n\t\t\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\t\t\tcase SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\tcase SQLTokenizer.MONEY:\r\n\t\t\t\t\tcase SQLTokenizer.SMALLMONEY:"
      },
      "id": "clone_49",
      "clone_type": "type-1",
      "clone": {
        "end_line": 257,
        "file": "/src/smallsql/database/Index.java",
        "start_line": 250,
        "source_code": "break;\r\n\t\t\t\t\tcase SQLTokenizer.BIGINT:\r\n\t\t\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\t\t\tcase SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\tcase SQLTokenizer.MONEY:\r\n\t\t\t\t\tcase SQLTokenizer.SMALLMONEY:"
      }
    },
    {
      "origin": {
        "end_line": 484,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 479,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      },
      "id": "clone_50",
      "clone_type": "type-1",
      "clone": {
        "end_line": 539,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 534,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      }
    },
    {
      "origin": {
        "end_line": 484,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 479,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      },
      "id": "clone_51",
      "clone_type": "type-1",
      "clone": {
        "end_line": 549,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 544,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      }
    },
    {
      "origin": {
        "end_line": 484,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 479,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      },
      "id": "clone_52",
      "clone_type": "type-1",
      "clone": {
        "end_line": 610,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 605,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      }
    },
    {
      "origin": {
        "end_line": 484,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 479,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      },
      "id": "clone_53",
      "clone_type": "type-1",
      "clone": {
        "end_line": 626,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 621,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      }
    },
    {
      "origin": {
        "end_line": 539,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 534,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      },
      "id": "clone_54",
      "clone_type": "type-1",
      "clone": {
        "end_line": 549,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 544,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      }
    },
    {
      "origin": {
        "end_line": 539,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 534,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      },
      "id": "clone_55",
      "clone_type": "type-1",
      "clone": {
        "end_line": 610,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 605,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      }
    },
    {
      "origin": {
        "end_line": 539,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 534,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      },
      "id": "clone_56",
      "clone_type": "type-1",
      "clone": {
        "end_line": 626,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 621,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      }
    },
    {
      "origin": {
        "end_line": 549,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 544,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf );"
      },
      "id": "clone_57",
      "clone_type": "type-1",
      "clone": {
        "end_line": 610,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 605,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf );"
      }
    },
    {
      "origin": {
        "end_line": 549,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 544,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf );"
      },
      "id": "clone_58",
      "clone_type": "type-1",
      "clone": {
        "end_line": 626,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 621,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf );"
      }
    },
    {
      "origin": {
        "end_line": 610,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 605,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      },
      "id": "clone_59",
      "clone_type": "type-1",
      "clone": {
        "end_line": 626,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 621,
        "source_code": "buf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);"
      }
    },
    {
      "origin": {
        "end_line": 901,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 897,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      },
      "id": "clone_60",
      "clone_type": "type-1",
      "clone": {
        "end_line": 967,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 963,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      }
    },
    {
      "origin": {
        "end_line": 901,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 897,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      },
      "id": "clone_61",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1032,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1028,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      }
    },
    {
      "origin": {
        "end_line": 901,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 897,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      },
      "id": "clone_62",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1097,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1093,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      }
    },
    {
      "origin": {
        "end_line": 967,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 963,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      },
      "id": "clone_63",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1032,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1028,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      }
    },
    {
      "origin": {
        "end_line": 967,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 963,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      },
      "id": "clone_64",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1097,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1093,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      }
    },
    {
      "origin": {
        "end_line": 1032,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1028,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      },
      "id": "clone_65",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1097,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1093,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return readBoolean() ? 1 : 0;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:"
      }
    },
    {
      "origin": {
        "end_line": 1245,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1239,
        "source_code": "case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:\r\n                    return readNumeric();\r\n            case SQLTokenizer.CHAR:\r\n            case SQLTokenizer.NCHAR:\r\n            case SQLTokenizer.VARCHAR:\r\n            case SQLTokenizer.NVARCHAR:"
      },
      "id": "clone_66",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1307,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1301,
        "source_code": "case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:\r\n                    return readNumeric();\r\n            case SQLTokenizer.CHAR:\r\n            case SQLTokenizer.NCHAR:\r\n            case SQLTokenizer.VARCHAR:\r\n            case SQLTokenizer.NVARCHAR:"
      }
    },
    {
      "origin": {
        "end_line": 360,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 356,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tint oldValue;"
      },
      "id": "clone_67",
      "clone_type": "type-1",
      "clone": {
        "end_line": 386,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 382,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tint oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 58,
        "file": "/src/smallsql/database/ExpressionFunctionRight.java",
        "start_line": 53,
        "source_code": "if(isNull()) return null;\r\n\t\tbyte[] bytes = param1.getBytes();\r\n\t\tint length = param2.getInt();\r\n\t\tif(bytes.length <= length) return bytes;\r\n\r\n\t\tbyte[] b = new byte[length];"
      },
      "id": "clone_68",
      "clone_type": "type-1",
      "clone": {
        "end_line": 58,
        "file": "/src/smallsql/database/ExpressionFunctionLeft.java",
        "start_line": 53,
        "source_code": "if(isNull()) return null;\r\n\t\tbyte[] bytes = param1.getBytes();\r\n\t\tint length = param2.getInt();\r\n\t\tif(bytes.length <= length) return bytes;\r\n\r\n\t\tbyte[] b = new byte[length];"
      }
    },
    {
      "origin": {
        "end_line": 107,
        "file": "/src/smallsql/junit/TestResultSet.java",
        "start_line": 85,
        "source_code": "assertEquals(\"getRow\", 1, rs.getRow() );\r\n        assertTrue(\"isLast\", rs.isLast() );\r\n        assertFalse(\"next\", rs.next() );\r\n        assertFalse(\"isBeforeFirst\", rs.isBeforeFirst() );\r\n        assertTrue(\"isAfterLast\", rs.isAfterLast() );\r\n        assertEquals(\"getRow\", 0, rs.getRow() );\r\n        \r\n        assertTrue(\"first\", rs.first() );\r\n        assertEquals(\"getRow\", 1, rs.getRow() );\r\n        \r\n        assertFalse(\"previous\", rs.previous() );\r\n        assertEquals(\"getRow\", 0, rs.getRow() );\r\n        assertTrue(\"isBeforeFirst\", rs.isBeforeFirst() );\r\n        assertFalse(\"isAfterLast\", rs.isAfterLast() );\r\n        \r\n        assertTrue(\"last\", rs.last() );\r\n        assertEquals(\"getRow\", 1, rs.getRow() );\r\n        assertTrue(\"isLast\", rs.isLast() );\r\n        \r\n        rs.afterLast();\r\n        assertFalse(\"isBeforeFirst\", rs.isBeforeFirst() );\r\n        assertTrue(\"isAfterLast\", rs.isAfterLast() );\r\n        assertEquals(\"getRow\", 0, rs.getRow() );"
      },
      "id": "clone_69",
      "clone_type": "type-1",
      "clone": {
        "end_line": 150,
        "file": "/src/smallsql/junit/TestResultSet.java",
        "start_line": 128,
        "source_code": "assertEquals(\"getRow\", 1, rs.getRow() );\r\n        assertTrue(\"isLast\", rs.isLast() );\r\n        assertFalse(\"next\", rs.next() );\r\n        assertFalse(\"isBeforeFirst\", rs.isBeforeFirst() );\r\n        assertTrue(\"isAfterLast\", rs.isAfterLast() );\r\n        assertEquals(\"getRow\", 0, rs.getRow() );\r\n        \r\n        assertTrue(\"first\", rs.first() );\r\n        assertEquals(\"getRow\", 1, rs.getRow() );\r\n        \r\n        assertFalse(\"previous\", rs.previous() );\r\n        assertEquals(\"getRow\", 0, rs.getRow() );\r\n        assertTrue(\"isBeforeFirst\", rs.isBeforeFirst() );\r\n        assertFalse(\"isAfterLast\", rs.isAfterLast() );\r\n        \r\n        assertTrue(\"last\", rs.last() );\r\n        assertEquals(\"getRow\", 1, rs.getRow() );\r\n        assertTrue(\"isLast\", rs.isLast() );\r\n        \r\n        rs.afterLast();\r\n        assertFalse(\"isBeforeFirst\", rs.isBeforeFirst() );\r\n        assertTrue(\"isAfterLast\", rs.isAfterLast() );\r\n        assertEquals(\"getRow\", 0, rs.getRow() );"
      }
    },
    {
      "origin": {
        "end_line": 53,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 46,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n\t\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      },
      "id": "clone_70",
      "clone_type": "type-1",
      "clone": {
        "end_line": 86,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 79,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n\t\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      }
    },
    {
      "origin": {
        "end_line": 53,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 46,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n\t\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      },
      "id": "clone_71",
      "clone_type": "type-1",
      "clone": {
        "end_line": 118,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 111,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n\t\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      }
    },
    {
      "origin": {
        "end_line": 53,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 46,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n\t\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      },
      "id": "clone_72",
      "clone_type": "type-1",
      "clone": {
        "end_line": 154,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 147,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n\t\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      }
    },
    {
      "origin": {
        "end_line": 86,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 79,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      },
      "id": "clone_73",
      "clone_type": "type-1",
      "clone": {
        "end_line": 118,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 111,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      }
    },
    {
      "origin": {
        "end_line": 86,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 79,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      },
      "id": "clone_74",
      "clone_type": "type-1",
      "clone": {
        "end_line": 154,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 147,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      }
    },
    {
      "origin": {
        "end_line": 118,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 111,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      },
      "id": "clone_75",
      "clone_type": "type-1",
      "clone": {
        "end_line": 154,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 147,
        "source_code": "con.createStatement().execute(\"Create Table Scrollable (i counter, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into Scrollable(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from Scrollable\");\r\n\t\t\tassertRowCount( 0, \"Select * from Scrollable Where 1=0\");\r\n\r\n            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);"
      }
    },
    {
      "origin": {
        "end_line": 433,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 422,
        "source_code": "pr.setDouble(  8 , 23.45 );\r\n\t            pr.setDouble(  9 , 567.45 );\r\n\t            pr.setFloat (  10 , (float)78.89 );\r\n\t            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r\n\t            pr.setShort (  12, (short)23456 );\r\n\t            pr.setFloat (  13, (float)34.56 );\r\n\t            pr.setString(  14, \"sysname (30) NULL\" );\r\n\t            pr.setString(  15 , \"text NULL\" );\r\n\t            pr.setByte  (  16, (byte)28 );\r\n\t            pr.setBytes (  17, byteArray );\r\n\t            pr.setString(  18, \"varchar (255) NULL\" );\r\n\t            pr.setInt   (  19 , i );"
      },
      "id": "clone_76",
      "clone_type": "type-1",
      "clone": {
        "end_line": 541,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 530,
        "source_code": "pr.setDouble(  8 , 23.45 );\r\n\t            pr.setDouble(  9 , 567.45 );\r\n\t            pr.setFloat (  10 , (float)78.89 );\r\n\t            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r\n\t            pr.setShort (  12, (short)23456 );\r\n\t            pr.setFloat (  13, (float)34.56 );\r\n\t            pr.setString(  14, \"sysname (30) NULL\" );\r\n\t            pr.setString(  15 , \"text NULL\" );\r\n\t            pr.setByte  (  16, (byte)28 );\r\n\t            pr.setBytes (  17, byteArray );\r\n\t            pr.setString(  18, \"varchar (255) NULL\" );\r\n\t            pr.setInt   (  19 , i );"
      }
    },
    {
      "origin": {
        "end_line": 451,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 447,
        "source_code": "buf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(',');\r\n\t\t\t\tbuf.append(' ');"
      },
      "id": "clone_77",
      "clone_type": "type-1",
      "clone": {
        "end_line": 459,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 455,
        "source_code": "buf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(',');\r\n\t\t\t\tbuf.append(' ');"
      }
    },
    {
      "origin": {
        "end_line": 195,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 190,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      },
      "id": "clone_78",
      "clone_type": "type-1",
      "clone": {
        "end_line": 239,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 234,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      }
    },
    {
      "origin": {
        "end_line": 195,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 190,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      },
      "id": "clone_79",
      "clone_type": "type-1",
      "clone": {
        "end_line": 281,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 276,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      }
    },
    {
      "origin": {
        "end_line": 195,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 190,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      },
      "id": "clone_80",
      "clone_type": "type-1",
      "clone": {
        "end_line": 328,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 323,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      }
    },
    {
      "origin": {
        "end_line": 239,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 234,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      },
      "id": "clone_81",
      "clone_type": "type-1",
      "clone": {
        "end_line": 281,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 276,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      }
    },
    {
      "origin": {
        "end_line": 239,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 234,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      },
      "id": "clone_82",
      "clone_type": "type-1",
      "clone": {
        "end_line": 328,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 323,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      }
    },
    {
      "origin": {
        "end_line": 281,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 276,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      },
      "id": "clone_83",
      "clone_type": "type-1",
      "clone": {
        "end_line": 328,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 323,
        "source_code": "case SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      }
    },
    {
      "origin": {
        "end_line": 281,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 265,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:\r\n                return getLongImpl();\r\n\t\t\tcase SQLTokenizer.REAL:\r\n                return getFloatImpl();\r\n\t\t\tcase SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      },
      "id": "clone_84",
      "clone_type": "type-1",
      "clone": {
        "end_line": 328,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 312,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:\r\n                return getLongImpl();\r\n\t\t\tcase SQLTokenizer.REAL:\r\n                return getFloatImpl();\r\n\t\t\tcase SQLTokenizer.FLOAT:\r\n\t\t\tcase SQLTokenizer.DOUBLE:\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:"
      }
    },
    {
      "origin": {
        "end_line": 395,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 391,
        "source_code": "formatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append('/');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('/');\r\n\t\t\t\tformatNumber( details.year % 100, 2, buf);"
      },
      "id": "clone_85",
      "clone_type": "type-1",
      "clone": {
        "end_line": 618,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 614,
        "source_code": "formatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append('/');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('/');\r\n\t\t\t\tformatNumber( details.year % 100, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 499,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 495,
        "source_code": "case SQLTokenizer.BIT:\r\n                return (obj.equals(Boolean.TRUE)) ? 1 : 0;\r\n            case SQLTokenizer.INT:\r\n            case SQLTokenizer.BIGINT:\r\n            case SQLTokenizer.DOUBLE:"
      },
      "id": "clone_86",
      "clone_type": "type-1",
      "clone": {
        "end_line": 524,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 520,
        "source_code": "case SQLTokenizer.BIT:\r\n                return (obj.equals(Boolean.TRUE)) ? 1 : 0;\r\n            case SQLTokenizer.INT:\r\n            case SQLTokenizer.BIGINT:\r\n            case SQLTokenizer.DOUBLE:"
      }
    },
    {
      "origin": {
        "end_line": 634,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 629,
        "source_code": "pr.close();\r\n            time += System.currentTimeMillis();\r\n            System.out.println( \"  Test time: \" + time + \" ms\");\r\n            fis.close();\r\n            java.io.File file = new java.io.File(tableName+\".bin\");\r\n            file.delete();"
      },
      "id": "clone_87",
      "clone_type": "type-1",
      "clone": {
        "end_line": 675,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 670,
        "source_code": "pr.close();\r\n            time += System.currentTimeMillis();\r\n            System.out.println( \"  Test time: \" + time + \" ms\");\r\n            fis.close();\r\n            java.io.File file = new java.io.File(tableName+\".bin\");\r\n            file.delete();"
      }
    },
    {
      "origin": {
        "end_line": 272,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 268,
        "source_code": "TestValue value = new TestValue();\r\n        value.dataType  = dataType;\r\n        value.small     = small;\r\n        value.large     = large;\r\n        return value;"
      },
      "id": "clone_88",
      "clone_type": "type-1",
      "clone": {
        "end_line": 209,
        "file": "/src/smallsql/junit/TestJoins.java",
        "start_line": 205,
        "source_code": "TestValue value = new TestValue();\r\n        value.dataType  = dataType;\r\n        value.small     = small;\r\n        value.large     = large;\r\n        return value;"
      }
    },
    {
      "origin": {
        "end_line": 186,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 179,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_89",
      "clone_type": "type-1",
      "clone": {
        "end_line": 230,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 223,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 186,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 179,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_90",
      "clone_type": "type-1",
      "clone": {
        "end_line": 272,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 265,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 186,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 179,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_91",
      "clone_type": "type-1",
      "clone": {
        "end_line": 319,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 312,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 230,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 223,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_92",
      "clone_type": "type-1",
      "clone": {
        "end_line": 272,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 265,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 230,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 223,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_93",
      "clone_type": "type-1",
      "clone": {
        "end_line": 319,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 312,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 272,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 265,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_94",
      "clone_type": "type-1",
      "clone": {
        "end_line": 319,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 312,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n\t\t\t\treturn getBoolean() ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n\t\t\t\treturn getIntImpl();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 909,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 903,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_95",
      "clone_type": "type-1",
      "clone": {
        "end_line": 975,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 969,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 909,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 903,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_96",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1040,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1034,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 909,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 903,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_97",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1105,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1099,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 975,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 969,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_98",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1040,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1034,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 975,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 969,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_99",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1105,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1099,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 1040,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1034,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_100",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1105,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1099,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 200,
        "file": "/src/smallsql/database/Index.java",
        "start_line": 195,
        "source_code": "break;\r\n\t\t\t\t\tcase SQLTokenizer.VARBINARY:\r\n\t\t\t\t\tcase SQLTokenizer.BINARY:\r\n\t\t\t\t\tcase SQLTokenizer.LONGVARBINARY:\r\n\t\t\t\t\tcase SQLTokenizer.BLOB:\r\n\t\t\t\t\tcase SQLTokenizer.UNIQUEIDENTIFIER:"
      },
      "id": "clone_101",
      "clone_type": "type-1",
      "clone": {
        "end_line": 274,
        "file": "/src/smallsql/database/Index.java",
        "start_line": 269,
        "source_code": "break;\r\n\t\t\t\t\tcase SQLTokenizer.VARBINARY:\r\n\t\t\t\t\tcase SQLTokenizer.BINARY:\r\n\t\t\t\t\tcase SQLTokenizer.LONGVARBINARY:\r\n\t\t\t\t\tcase SQLTokenizer.BLOB:\r\n\t\t\t\t\tcase SQLTokenizer.UNIQUEIDENTIFIER:"
      }
    },
    {
      "origin": {
        "end_line": 273,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 268,
        "source_code": "assertEquals(1,pr.executeUpdate());\r\n        rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_102",
      "clone_type": "type-1",
      "clone": {
        "end_line": 288,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 283,
        "source_code": "assertEquals(1,pr.executeUpdate());\r\n        rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 273,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 268,
        "source_code": "assertEquals(1,pr.executeUpdate());\r\n        rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_103",
      "clone_type": "type-1",
      "clone": {
        "end_line": 303,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 298,
        "source_code": "assertEquals(1,pr.executeUpdate());\r\n        rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 288,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 283,
        "source_code": "assertEquals(1,pr.executeUpdate());\r\n        rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_104",
      "clone_type": "type-1",
      "clone": {
        "end_line": 303,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 298,
        "source_code": "assertEquals(1,pr.executeUpdate());\r\n        rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 213,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 209,
        "source_code": "rs = st.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_105",
      "clone_type": "type-1",
      "clone": {
        "end_line": 226,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 222,
        "source_code": "rs = st.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 213,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 209,
        "source_code": "rs = st.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_106",
      "clone_type": "type-1",
      "clone": {
        "end_line": 239,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 235,
        "source_code": "rs = st.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 226,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 222,
        "source_code": "rs = st.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_107",
      "clone_type": "type-1",
      "clone": {
        "end_line": 239,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 235,
        "source_code": "rs = st.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 265,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 261,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_108",
      "clone_type": "type-1",
      "clone": {
        "end_line": 273,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 269,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 265,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 261,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_109",
      "clone_type": "type-1",
      "clone": {
        "end_line": 288,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 284,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 265,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 261,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_110",
      "clone_type": "type-1",
      "clone": {
        "end_line": 303,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 299,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 273,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 269,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_111",
      "clone_type": "type-1",
      "clone": {
        "end_line": 288,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 284,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 273,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 269,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_112",
      "clone_type": "type-1",
      "clone": {
        "end_line": 303,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 299,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 288,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 284,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      },
      "id": "clone_113",
      "clone_type": "type-1",
      "clone": {
        "end_line": 303,
        "file": "/src/smallsql/junit/TestStatement.java",
        "start_line": 299,
        "source_code": "rs = pr.getGeneratedKeys();\r\n        assertNotNull(\"RETURN_GENERATED_KEYS\", rs);\r\n        assertEquals(\"ColumnCount\",1,rs.getMetaData().getColumnCount());\r\n        assertEquals(\"ColumnCount\",\"i\",rs.getMetaData().getColumnName(1));\r\n        assertRowCount(1,rs);"
      }
    },
    {
      "origin": {
        "end_line": 486,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 475,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatHour12( details.hour, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);\r\n\t\t\t\tbuf.append( details.hour < 12 ? \"AM\" : \"PM\" );\r\n\t\t\t\treturn buf.toString();"
      },
      "id": "clone_114",
      "clone_type": "type-1",
      "clone": {
        "end_line": 612,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 601,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatHour12( details.hour, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);\r\n\t\t\t\tbuf.append( details.hour < 12 ? \"AM\" : \"PM\" );\r\n\t\t\t\treturn buf.toString();"
      }
    },
    {
      "origin": {
        "end_line": 241,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 237,
        "source_code": "assertEquals(0, rs.getRow());\r\n        assertFalse(rs.isLast());\r\n        assertFalse(rs.isFirst());\r\n        assertFalse(rs.isBeforeFirst());\r\n        assertTrue(rs.isAfterLast());"
      },
      "id": "clone_115",
      "clone_type": "type-1",
      "clone": {
        "end_line": 260,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 256,
        "source_code": "assertEquals(0, rs.getRow());\r\n        assertFalse(rs.isLast());\r\n        assertFalse(rs.isFirst());\r\n        assertFalse(rs.isBeforeFirst());\r\n        assertTrue(rs.isAfterLast());"
      }
    },
    {
      "origin": {
        "end_line": 707,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 684,
        "source_code": "offset += 2;\r\n                    break;\r\n                case SQLTokenizer.INT:\r\n                case SQLTokenizer.REAL:\r\n                case SQLTokenizer.SMALLMONEY:\r\n                case SQLTokenizer.TIME:\r\n                case SQLTokenizer.DATE:\r\n                case SQLTokenizer.SMALLDATETIME:\r\n                    offset += 4;\r\n                    break;\r\n                case SQLTokenizer.BIGINT:\r\n                case SQLTokenizer.FLOAT:\r\n                case SQLTokenizer.DOUBLE:\r\n                case SQLTokenizer.MONEY:\r\n                case SQLTokenizer.JAVA_OBJECT:\r\n                case SQLTokenizer.LONGVARBINARY:\r\n                case SQLTokenizer.BLOB:\r\n\t\t\t\tcase SQLTokenizer.CLOB:\r\n\t\t\t\tcase SQLTokenizer.NCLOB:\r\n                case SQLTokenizer.LONGNVARCHAR:\r\n                case SQLTokenizer.LONGVARCHAR:\r\n                case SQLTokenizer.TIMESTAMP:\r\n                    offset += 8;\r\n                    break;"
      },
      "id": "clone_116",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1502,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1479,
        "source_code": "offset += 2;\r\n                    break;\r\n                case SQLTokenizer.INT:\r\n                case SQLTokenizer.REAL:\r\n                case SQLTokenizer.SMALLMONEY:\r\n                case SQLTokenizer.TIME:\r\n                case SQLTokenizer.DATE:\r\n                case SQLTokenizer.SMALLDATETIME:\r\n                    offset += 4;\r\n                    break;\r\n                case SQLTokenizer.BIGINT:\r\n                case SQLTokenizer.FLOAT:\r\n                case SQLTokenizer.DOUBLE:\r\n                case SQLTokenizer.MONEY:\r\n                case SQLTokenizer.JAVA_OBJECT:\r\n                case SQLTokenizer.LONGVARBINARY:\r\n                case SQLTokenizer.BLOB:\r\n\t\t\t\tcase SQLTokenizer.CLOB:\r\n\t\t\t\tcase SQLTokenizer.NCLOB:\r\n                case SQLTokenizer.LONGNVARCHAR:\r\n                case SQLTokenizer.LONGVARCHAR:\r\n                case SQLTokenizer.TIMESTAMP:\r\n                    offset += 8;\r\n                    break;"
      }
    },
    {
      "origin": {
        "end_line": 432,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 426,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                return (obj == Boolean.TRUE) ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n            case SQLTokenizer.BIGINT:"
      },
      "id": "clone_117",
      "clone_type": "type-1",
      "clone": {
        "end_line": 467,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 461,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                return (obj == Boolean.TRUE) ? 1 : 0;\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n            case SQLTokenizer.BIGINT:"
      }
    },
    {
      "origin": {
        "end_line": 83,
        "file": "/src/smallsql/junit/TestResultSet.java",
        "start_line": 78,
        "source_code": "rs.beforeFirst();\r\n        assertTrue(\"isBeforeFirst\", rs.isBeforeFirst() );\r\n        assertFalse(\"isAfterLast\", rs.isAfterLast() );\r\n        assertEquals(\"getRow\", 0, rs.getRow() );\r\n        assertTrue(\"next\", rs.next() );\r\n        assertTrue(\"isFirst\", rs.isFirst() );"
      },
      "id": "clone_118",
      "clone_type": "type-1",
      "clone": {
        "end_line": 126,
        "file": "/src/smallsql/junit/TestResultSet.java",
        "start_line": 121,
        "source_code": "rs.beforeFirst();\r\n        assertTrue(\"isBeforeFirst\", rs.isBeforeFirst() );\r\n        assertFalse(\"isAfterLast\", rs.isAfterLast() );\r\n        assertEquals(\"getRow\", 0, rs.getRow() );\r\n        assertTrue(\"next\", rs.next() );\r\n        assertTrue(\"isFirst\", rs.isFirst() );"
      }
    },
    {
      "origin": {
        "end_line": 218,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 209,
        "source_code": "pr.setObject( 1, testValue.small);\r\n        pr.setObject( 2, testValue.large);\r\n        rs = pr.executeQuery();\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertFalse( \"To many rows\", rs.next() );\r\n\t\tpr.close();"
      },
      "id": "clone_119",
      "clone_type": "type-1",
      "clone": {
        "end_line": 239,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 230,
        "source_code": "pr.setObject( 1, testValue.small);\r\n        pr.setObject( 2, testValue.large);\r\n        rs = pr.executeQuery();\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertFalse( \"To many rows\", rs.next() );\r\n\t\tpr.close();"
      }
    },
    {
      "origin": {
        "end_line": 625,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 618,
        "source_code": "java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+\".bin\");\r\n            byte bytes[] = new byte[1024];\r\n            for(int i=0; i<rowCount; i++){\r\n                fos.write(bytes);\r\n            }\r\n            fos.close();\r\n            java.io.FileInputStream fis = new java.io.FileInputStream(tableName+\".bin\");\r\n            long time = -System.currentTimeMillis();"
      },
      "id": "clone_120",
      "clone_type": "type-1",
      "clone": {
        "end_line": 662,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 655,
        "source_code": "java.io.FileOutputStream fos = new java.io.FileOutputStream(tableName+\".bin\");\r\n            byte bytes[] = new byte[1024];\r\n            for(int i=0; i<rowCount; i++){\r\n                fos.write(bytes);\r\n            }\r\n            fos.close();\r\n            java.io.FileInputStream fis = new java.io.FileInputStream(tableName+\".bin\");\r\n            long time = -System.currentTimeMillis();"
      }
    },
    {
      "origin": {
        "end_line": 186,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 182,
        "source_code": "assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertFalse( \"To many rows\", rs.next() );"
      },
      "id": "clone_121",
      "clone_type": "type-1",
      "clone": {
        "end_line": 217,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 213,
        "source_code": "assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertFalse( \"To many rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 186,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 182,
        "source_code": "assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertFalse( \"To many rows\", rs.next() );"
      },
      "id": "clone_122",
      "clone_type": "type-1",
      "clone": {
        "end_line": 238,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 234,
        "source_code": "assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertFalse( \"To many rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 217,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 213,
        "source_code": "assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertFalse( \"To many rows\", rs.next() );"
      },
      "id": "clone_123",
      "clone_type": "type-1",
      "clone": {
        "end_line": 238,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 234,
        "source_code": "assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertFalse( \"To many rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 1014,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1006,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\treturn readTimestamp();\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\t\t\treturn readTime();\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\treturn readDate();\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\treturn readSmallDateTime();\r\n\t\t\tdefault:"
      },
      "id": "clone_124",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1079,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1071,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\treturn readTimestamp();\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\t\t\treturn readTime();\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\treturn readDate();\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\treturn readSmallDateTime();\r\n\t\t\tdefault:"
      }
    },
    {
      "origin": {
        "end_line": 1014,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1006,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\treturn readTimestamp();\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\t\t\treturn readTime();\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\treturn readDate();\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\treturn readSmallDateTime();\r\n\t\t\tdefault:"
      },
      "id": "clone_125",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1144,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1136,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\treturn readTimestamp();\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\t\t\treturn readTime();\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\treturn readDate();\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\treturn readSmallDateTime();\r\n\t\t\tdefault:"
      }
    },
    {
      "origin": {
        "end_line": 1079,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1071,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\treturn readTimestamp();\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\t\t\treturn readTime();\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\treturn readDate();\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\treturn readSmallDateTime();\r\n\t\t\tdefault:"
      },
      "id": "clone_126",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1144,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1136,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\treturn readTimestamp();\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\t\t\treturn readTime();\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\treturn readDate();\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\treturn readSmallDateTime();\r\n\t\t\tdefault:"
      }
    },
    {
      "origin": {
        "end_line": 179,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 175,
        "source_code": "break;\r\n\t\t\t\t\t\tcase SQLTokenizer.CHAR:\r\n\t\t\t\t\t\tcase SQLTokenizer.VARCHAR:\r\n\t\t\t\t\t\tcase SQLTokenizer.LONGVARCHAR:\r\n\t\t\t\t\t\t\tString str = expr.getString();"
      },
      "id": "clone_127",
      "clone_type": "type-1",
      "clone": {
        "end_line": 236,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 232,
        "source_code": "break;\r\n\t\t\t\t\t\tcase SQLTokenizer.CHAR:\r\n\t\t\t\t\t\tcase SQLTokenizer.VARCHAR:\r\n\t\t\t\t\t\tcase SQLTokenizer.LONGVARCHAR:\r\n\t\t\t\t\t\t\tString str = expr.getString();"
      }
    },
    {
      "origin": {
        "end_line": 532,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 527,
        "source_code": "formatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tbuf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');"
      },
      "id": "clone_128",
      "clone_type": "type-1",
      "clone": {
        "end_line": 603,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 598,
        "source_code": "formatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tbuf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');"
      }
    },
    {
      "origin": {
        "end_line": 253,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 249,
        "source_code": "assertEquals(0, rs.getRow());\r\n        assertFalse(rs.isLast());\r\n        assertFalse(rs.isFirst());\r\n        assertTrue(rs.isBeforeFirst());\r\n        assertFalse(rs.isAfterLast());"
      },
      "id": "clone_129",
      "clone_type": "type-1",
      "clone": {
        "end_line": 267,
        "file": "/src/smallsql/junit/TestScrollable.java",
        "start_line": 263,
        "source_code": "assertEquals(0, rs.getRow());\r\n        assertFalse(rs.isLast());\r\n        assertFalse(rs.isFirst());\r\n        assertTrue(rs.isBeforeFirst());\r\n        assertFalse(rs.isAfterLast());"
      }
    },
    {
      "origin": {
        "end_line": 524,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 520,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tLong oldValue;"
      },
      "id": "clone_130",
      "clone_type": "type-1",
      "clone": {
        "end_line": 550,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 546,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tLong oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 154,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 148,
        "source_code": "con.createStatement().execute(\"Insert Into transactions(v) Select v From transactions\");\r\n\t\t\tassertRowCount( 2, \"Select * from transactions\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into transactions(v) (Select v From transactions)\");\r\n\t\t\tassertRowCount( 4, \"Select * from transactions\");\r\n\t\t\t\r\n\t\t\tcon.rollback();"
      },
      "id": "clone_131",
      "clone_type": "type-1",
      "clone": {
        "end_line": 185,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 179,
        "source_code": "con.createStatement().execute(\"Insert Into transactions(v) Select v From transactions\");\r\n\t\t\tassertRowCount( 2, \"Select * from transactions\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into transactions(v) (Select v From transactions)\");\r\n\t\t\tassertRowCount( 4, \"Select * from transactions\");\r\n\t\t\t\r\n\t\t\tcon.rollback();"
      }
    },
    {
      "origin": {
        "end_line": 432,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 422,
        "source_code": "pr.setDouble(  8 , 23.45 );\r\n\t            pr.setDouble(  9 , 567.45 );\r\n\t            pr.setFloat (  10 , (float)78.89 );\r\n\t            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r\n\t            pr.setShort (  12, (short)23456 );\r\n\t            pr.setFloat (  13, (float)34.56 );\r\n\t            pr.setString(  14, \"sysname (30) NULL\" );\r\n\t            pr.setString(  15 , \"text NULL\" );\r\n\t            pr.setByte  (  16, (byte)28 );\r\n\t            pr.setBytes (  17, byteArray );\r\n\t            pr.setString(  18, \"varchar (255) NULL\" );"
      },
      "id": "clone_132",
      "clone_type": "type-1",
      "clone": {
        "end_line": 486,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 476,
        "source_code": "pr.setDouble(  8 , 23.45 );\r\n\t            pr.setDouble(  9 , 567.45 );\r\n\t            pr.setFloat (  10 , (float)78.89 );\r\n\t            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r\n\t            pr.setShort (  12, (short)23456 );\r\n\t            pr.setFloat (  13, (float)34.56 );\r\n\t            pr.setString(  14, \"sysname (30) NULL\" );\r\n\t            pr.setString(  15 , \"text NULL\" );\r\n\t            pr.setByte  (  16, (byte)28 );\r\n\t            pr.setBytes (  17, byteArray );\r\n\t            pr.setString(  18, \"varchar (255) NULL\" );"
      }
    },
    {
      "origin": {
        "end_line": 432,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 422,
        "source_code": "pr.setDouble(  8 , 23.45 );\r\n\t            pr.setDouble(  9 , 567.45 );\r\n\t            pr.setFloat (  10 , (float)78.89 );\r\n\t            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r\n\t            pr.setShort (  12, (short)23456 );\r\n\t            pr.setFloat (  13, (float)34.56 );\r\n\t            pr.setString(  14, \"sysname (30) NULL\" );\r\n\t            pr.setString(  15 , \"text NULL\" );\r\n\t            pr.setByte  (  16, (byte)28 );\r\n\t            pr.setBytes (  17, byteArray );\r\n\t            pr.setString(  18, \"varchar (255) NULL\" );"
      },
      "id": "clone_133",
      "clone_type": "type-1",
      "clone": {
        "end_line": 540,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 530,
        "source_code": "pr.setDouble(  8 , 23.45 );\r\n\t            pr.setDouble(  9 , 567.45 );\r\n\t            pr.setFloat (  10 , (float)78.89 );\r\n\t            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r\n\t            pr.setShort (  12, (short)23456 );\r\n\t            pr.setFloat (  13, (float)34.56 );\r\n\t            pr.setString(  14, \"sysname (30) NULL\" );\r\n\t            pr.setString(  15 , \"text NULL\" );\r\n\t            pr.setByte  (  16, (byte)28 );\r\n\t            pr.setBytes (  17, byteArray );\r\n\t            pr.setString(  18, \"varchar (255) NULL\" );"
      }
    },
    {
      "origin": {
        "end_line": 486,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 476,
        "source_code": "pr.setDouble(  8 , 23.45 );\r\n\t            pr.setDouble(  9 , 567.45 );\r\n\t            pr.setFloat (  10 , (float)78.89 );\r\n\t            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r\n\t            pr.setShort (  12, (short)23456 );\r\n\t            pr.setFloat (  13, (float)34.56 );\r\n\t            pr.setString(  14, \"sysname (30) NULL\" );\r\n\t            pr.setString(  15 , \"text NULL\" );\r\n\t            pr.setByte  (  16, (byte)28 );\r\n\t            pr.setBytes (  17, byteArray );\r\n\t            pr.setString(  18, \"varchar (255) NULL\" );"
      },
      "id": "clone_134",
      "clone_type": "type-1",
      "clone": {
        "end_line": 540,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 530,
        "source_code": "pr.setDouble(  8 , 23.45 );\r\n\t            pr.setDouble(  9 , 567.45 );\r\n\t            pr.setFloat (  10 , (float)78.89 );\r\n\t            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r\n\t            pr.setShort (  12, (short)23456 );\r\n\t            pr.setFloat (  13, (float)34.56 );\r\n\t            pr.setString(  14, \"sysname (30) NULL\" );\r\n\t            pr.setString(  15 , \"text NULL\" );\r\n\t            pr.setByte  (  16, (byte)28 );\r\n\t            pr.setBytes (  17, byteArray );\r\n\t            pr.setString(  18, \"varchar (255) NULL\" );"
      }
    },
    {
      "origin": {
        "end_line": 432,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 415,
        "source_code": "pr.setBytes (  1, byteArray );\r\n\t            pr.setString(  2 , \"Test\" );\r\n\t            pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r\n\t            pr.setFloat (  4, (float)1234.56789 );\r\n\t            pr.setFloat (  5 , (float)9876.54321 );\r\n\t            pr.setBytes (  6, largeByteArray );\r\n\t            pr.setInt   (  7 , i );\r\n\t            pr.setDouble(  8 , 23.45 );\r\n\t            pr.setDouble(  9 , 567.45 );\r\n\t            pr.setFloat (  10 , (float)78.89 );\r\n\t            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r\n\t            pr.setShort (  12, (short)23456 );\r\n\t            pr.setFloat (  13, (float)34.56 );\r\n\t            pr.setString(  14, \"sysname (30) NULL\" );\r\n\t            pr.setString(  15 , \"text NULL\" );\r\n\t            pr.setByte  (  16, (byte)28 );\r\n\t            pr.setBytes (  17, byteArray );\r\n\t            pr.setString(  18, \"varchar (255) NULL\" );"
      },
      "id": "clone_135",
      "clone_type": "type-1",
      "clone": {
        "end_line": 486,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 469,
        "source_code": "pr.setBytes (  1, byteArray );\r\n\t            pr.setString(  2 , \"Test\" );\r\n\t            pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r\n\t            pr.setFloat (  4, (float)1234.56789 );\r\n\t            pr.setFloat (  5 , (float)9876.54321 );\r\n\t            pr.setBytes (  6, largeByteArray );\r\n\t            pr.setInt   (  7 , i );\r\n\t            pr.setDouble(  8 , 23.45 );\r\n\t            pr.setDouble(  9 , 567.45 );\r\n\t            pr.setFloat (  10 , (float)78.89 );\r\n\t            pr.setTime  (  11, new Time( System.currentTimeMillis() ) );\r\n\t            pr.setShort (  12, (short)23456 );\r\n\t            pr.setFloat (  13, (float)34.56 );\r\n\t            pr.setString(  14, \"sysname (30) NULL\" );\r\n\t            pr.setString(  15 , \"text NULL\" );\r\n\t            pr.setByte  (  16, (byte)28 );\r\n\t            pr.setBytes (  17, byteArray );\r\n\t            pr.setString(  18, \"varchar (255) NULL\" );"
      }
    },
    {
      "origin": {
        "end_line": 334,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 330,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tInteger oldValue;"
      },
      "id": "clone_136",
      "clone_type": "type-1",
      "clone": {
        "end_line": 419,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 415,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tInteger oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 334,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 330,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tInteger oldValue;"
      },
      "id": "clone_137",
      "clone_type": "type-1",
      "clone": {
        "end_line": 445,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 441,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tInteger oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 419,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 415,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tInteger oldValue;"
      },
      "id": "clone_138",
      "clone_type": "type-1",
      "clone": {
        "end_line": 445,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 441,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement();\r\n\t\tResultSet rs;\r\n\t\tInteger oldValue;"
      }
    },
    {
      "origin": {
        "end_line": 274,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 262,
        "source_code": "assertEquals( 1, con.createStatement().executeUpdate(\"Update transactions set v='qwert1'\") );\r\n\t\t\tassertEqualsRsValue(\"qwert1\", \"Select * from transactions\");\r\n\t\t\tassertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");\r\n\t\t\t\r\n            assertEquals( 1, con.createStatement().executeUpdate(\"Update transactions set v='qwert2'\") );\r\n            assertEqualsRsValue(\"qwert2\", \"Select * from transactions\");\r\n            assertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");\r\n            \r\n\t\t\tSavepoint savepoint = con.setSavepoint();\r\n\t\t\t\r\n\t\t\tassertEquals( 1, con.createStatement().executeUpdate(\"Update transactions set v='qwert 3'\") );\r\n\t\t\tassertEqualsRsValue(\"qwert 3\", \"Select * from transactions\");\r\n\t\t\tassertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");"
      },
      "id": "clone_139",
      "clone_type": "type-1",
      "clone": {
        "end_line": 317,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 305,
        "source_code": "assertEquals( 1, con.createStatement().executeUpdate(\"Update transactions set v='qwert1'\") );\r\n\t\t\tassertEqualsRsValue(\"qwert1\", \"Select * from transactions\");\r\n\t\t\tassertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");\r\n\t\t\t\r\n            assertEquals( 1, con.createStatement().executeUpdate(\"Update transactions set v='qwert2'\") );\r\n            assertEqualsRsValue(\"qwert2\", \"Select * from transactions\");\r\n            assertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");\r\n            \r\n\t\t\tSavepoint savepoint = con.setSavepoint();\r\n\t\t\t\r\n\t\t\tassertEquals( 1, con.createStatement().executeUpdate(\"Update transactions set v='qwert 3'\") );\r\n\t\t\tassertEqualsRsValue(\"qwert 3\", \"Select * from transactions\");\r\n\t\t\tassertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");"
      }
    },
    {
      "origin": {
        "end_line": 280,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 274,
        "source_code": "assertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");\r\n\r\n\t\t\tcon.rollback( savepoint );\r\n\t\t\t\r\n\t\t\tcon.commit();\r\n\t\t\tassertEqualsRsValue(\"qwert2\", \"Select * from transactions\");\r\n\t\t\tassertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");"
      },
      "id": "clone_140",
      "clone_type": "type-1",
      "clone": {
        "end_line": 331,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 325,
        "source_code": "assertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");\r\n\r\n\t\t\tcon.rollback( savepoint );\r\n\t\t\t\r\n\t\t\tcon.commit();\r\n\t\t\tassertEqualsRsValue(\"qwert2\", \"Select * from transactions\");\r\n\t\t\tassertEqualsRsValue(new Integer(1), \"Select count(*) from transactions\");"
      }
    },
    {
      "origin": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 553,
        "source_code": "formatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_141",
      "clone_type": "type-1",
      "clone": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 567,
        "source_code": "formatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 537,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 532,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_142",
      "clone_type": "type-1",
      "clone": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 558,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 537,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 532,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_143",
      "clone_type": "type-1",
      "clone": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 572,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 537,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 532,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_144",
      "clone_type": "type-1",
      "clone": {
        "end_line": 624,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 619,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 558,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_145",
      "clone_type": "type-1",
      "clone": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 572,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 558,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_146",
      "clone_type": "type-1",
      "clone": {
        "end_line": 624,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 619,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 572,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_147",
      "clone_type": "type-1",
      "clone": {
        "end_line": 624,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 619,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 540,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 532,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);\r\n\t\t\t\treturn buf.toString();"
      },
      "id": "clone_148",
      "clone_type": "type-1",
      "clone": {
        "end_line": 627,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 619,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);\r\n\t\t\t\treturn buf.toString();"
      }
    },
    {
      "origin": {
        "end_line": 321,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 317,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      },
      "id": "clone_149",
      "clone_type": "type-1",
      "clone": {
        "end_line": 468,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 464,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      }
    },
    {
      "origin": {
        "end_line": 321,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 317,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      },
      "id": "clone_150",
      "clone_type": "type-1",
      "clone": {
        "end_line": 537,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 533,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      }
    },
    {
      "origin": {
        "end_line": 321,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 317,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      },
      "id": "clone_151",
      "clone_type": "type-1",
      "clone": {
        "end_line": 547,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 543,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      }
    },
    {
      "origin": {
        "end_line": 321,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 317,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      },
      "id": "clone_152",
      "clone_type": "type-1",
      "clone": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 559,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      }
    },
    {
      "origin": {
        "end_line": 321,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 317,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      },
      "id": "clone_153",
      "clone_type": "type-1",
      "clone": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 573,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      }
    },
    {
      "origin": {
        "end_line": 321,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 317,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      },
      "id": "clone_154",
      "clone_type": "type-1",
      "clone": {
        "end_line": 593,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 589,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      }
    },
    {
      "origin": {
        "end_line": 321,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 317,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      },
      "id": "clone_155",
      "clone_type": "type-1",
      "clone": {
        "end_line": 624,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 620,
        "source_code": "formatNumber( details.hour,  2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.minute, 2, buf );\r\n\t\t\tbuf.append(':');\r\n\t\t\tformatNumber( details.second, 2, buf );"
      }
    },
    {
      "origin": {
        "end_line": 468,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 464,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_156",
      "clone_type": "type-1",
      "clone": {
        "end_line": 537,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 533,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 468,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 464,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_157",
      "clone_type": "type-1",
      "clone": {
        "end_line": 547,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 543,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 468,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 464,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_158",
      "clone_type": "type-1",
      "clone": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 559,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 468,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 464,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_159",
      "clone_type": "type-1",
      "clone": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 573,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 468,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 464,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_160",
      "clone_type": "type-1",
      "clone": {
        "end_line": 593,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 589,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 468,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 464,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_161",
      "clone_type": "type-1",
      "clone": {
        "end_line": 624,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 620,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 537,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 533,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_162",
      "clone_type": "type-1",
      "clone": {
        "end_line": 547,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 543,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 537,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 533,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_163",
      "clone_type": "type-1",
      "clone": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 559,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 537,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 533,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_164",
      "clone_type": "type-1",
      "clone": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 573,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 537,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 533,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_165",
      "clone_type": "type-1",
      "clone": {
        "end_line": 593,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 589,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 537,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 533,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_166",
      "clone_type": "type-1",
      "clone": {
        "end_line": 624,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 620,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 547,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 543,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_167",
      "clone_type": "type-1",
      "clone": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 559,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 547,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 543,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_168",
      "clone_type": "type-1",
      "clone": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 573,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 547,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 543,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_169",
      "clone_type": "type-1",
      "clone": {
        "end_line": 593,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 589,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 547,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 543,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_170",
      "clone_type": "type-1",
      "clone": {
        "end_line": 624,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 620,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 559,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_171",
      "clone_type": "type-1",
      "clone": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 573,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 559,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_172",
      "clone_type": "type-1",
      "clone": {
        "end_line": 593,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 589,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 563,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 559,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_173",
      "clone_type": "type-1",
      "clone": {
        "end_line": 624,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 620,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 573,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_174",
      "clone_type": "type-1",
      "clone": {
        "end_line": 593,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 589,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 577,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 573,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_175",
      "clone_type": "type-1",
      "clone": {
        "end_line": 624,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 620,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 593,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 589,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      },
      "id": "clone_176",
      "clone_type": "type-1",
      "clone": {
        "end_line": 624,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 620,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 580,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 573,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append('.');\r\n\t\t\t\tformatMillis( details.millis, buf );\r\n\t\t\t\treturn buf.toString();"
      },
      "id": "clone_177",
      "clone_type": "type-1",
      "clone": {
        "end_line": 596,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 589,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append('.');\r\n\t\t\t\tformatMillis( details.millis, buf );\r\n\t\t\t\treturn buf.toString();"
      }
    },
    {
      "origin": {
        "end_line": 540,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 533,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);\r\n\t\t\t\treturn buf.toString();"
      },
      "id": "clone_178",
      "clone_type": "type-1",
      "clone": {
        "end_line": 550,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 543,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);\r\n\t\t\t\treturn buf.toString();"
      }
    },
    {
      "origin": {
        "end_line": 540,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 533,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);\r\n\t\t\t\treturn buf.toString();"
      },
      "id": "clone_179",
      "clone_type": "type-1",
      "clone": {
        "end_line": 627,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 620,
        "source_code": "formatNumber( details.hour, 2, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf);\r\n\t\t\t\treturn buf.toString();"
      }
    },
    {
      "origin": {
        "end_line": 550,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 543,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf );\r\n\t\t\t\treturn buf.toString();"
      },
      "id": "clone_180",
      "clone_type": "type-1",
      "clone": {
        "end_line": 627,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 620,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatMillis( details.millis, buf );\r\n\t\t\t\treturn buf.toString();"
      }
    },
    {
      "origin": {
        "end_line": 703,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 699,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r\n\t\tResultSet rs;\r\n\t\tint count;"
      },
      "id": "clone_181",
      "clone_type": "type-1",
      "clone": {
        "end_line": 734,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 730,
        "source_code": "init();\r\n\t\tConnection con = AllTests.getConnection();\r\n\t\tStatement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);\r\n\t\tResultSet rs;\r\n\t\tint count;"
      }
    },
    {
      "origin": {
        "end_line": 677,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 672,
        "source_code": "case SQLTokenizer.BIT:\r\n                case SQLTokenizer.BOOLEAN:\r\n                case SQLTokenizer.TINYINT:\r\n                    offset++;\r\n                    break;\r\n                case SQLTokenizer.SMALLINT:"
      },
      "id": "clone_182",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1478,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1473,
        "source_code": "case SQLTokenizer.BIT:\r\n                case SQLTokenizer.BOOLEAN:\r\n                case SQLTokenizer.TINYINT:\r\n                    offset++;\r\n                    break;\r\n                case SQLTokenizer.SMALLINT:"
      }
    },
    {
      "origin": {
        "end_line": 188,
        "file": "/src/smallsql/junit/TestDBMetaData.java",
        "start_line": 184,
        "source_code": "assertRSMetaData( rs, colNames, colTypes);\t\t\r\n\t\tassertTrue( \"No row\", rs.next() );\r\n\t\tassertEquals( \"a\", rs.getObject(\"COLUMN_NAME\") ); \r\n\t\tassertEquals( \"INT\", rs.getObject(\"TYPE_NAME\") ); \r\n\t\tassertEquals( \"5\", rs.getObject(\"COLUMN_Def\") );"
      },
      "id": "clone_183",
      "clone_type": "type-1",
      "clone": {
        "end_line": 197,
        "file": "/src/smallsql/junit/TestDBMetaData.java",
        "start_line": 193,
        "source_code": "assertRSMetaData( rs, colNames, colTypes);\t\t\r\n\t\tassertTrue( \"No row\", rs.next() );\r\n\t\tassertEquals( \"a\", rs.getObject(\"COLUMN_NAME\") ); \r\n\t\tassertEquals( \"INT\", rs.getObject(\"TYPE_NAME\") ); \r\n\t\tassertEquals( \"5\", rs.getObject(\"COLUMN_Def\") );"
      }
    },
    {
      "origin": {
        "end_line": 195,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 191,
        "source_code": "break;\r\n\t\t\t\t\t\tcase SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\t\tcase SQLTokenizer.TIME:"
      },
      "id": "clone_184",
      "clone_type": "type-1",
      "clone": {
        "end_line": 252,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 248,
        "source_code": "break;\r\n\t\t\t\t\t\tcase SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\t\tcase SQLTokenizer.TIME:"
      }
    },
    {
      "origin": {
        "end_line": 195,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 191,
        "source_code": "break;\r\n\t\t\t\t\t\tcase SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\t\tcase SQLTokenizer.TIME:"
      },
      "id": "clone_185",
      "clone_type": "type-1",
      "clone": {
        "end_line": 298,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 294,
        "source_code": "break;\r\n\t\t\t\t\t\tcase SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\t\tcase SQLTokenizer.TIME:"
      }
    },
    {
      "origin": {
        "end_line": 252,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 248,
        "source_code": "break;\r\n\t\t\t\t\t\tcase SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\t\tcase SQLTokenizer.TIME:"
      },
      "id": "clone_186",
      "clone_type": "type-1",
      "clone": {
        "end_line": 298,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 294,
        "source_code": "break;\r\n\t\t\t\t\t\tcase SQLTokenizer.TIMESTAMP:\r\n\t\t\t\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\t\t\t\tcase SQLTokenizer.TIME:"
      }
    },
    {
      "origin": {
        "end_line": 213,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 209,
        "source_code": "pr.setObject( 1, testValue.small);\r\n        pr.setObject( 2, testValue.large);\r\n        rs = pr.executeQuery();\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );"
      },
      "id": "clone_187",
      "clone_type": "type-1",
      "clone": {
        "end_line": 225,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 221,
        "source_code": "pr.setObject( 1, testValue.small);\r\n        pr.setObject( 2, testValue.large);\r\n        rs = pr.executeQuery();\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 213,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 209,
        "source_code": "pr.setObject( 1, testValue.small);\r\n        pr.setObject( 2, testValue.large);\r\n        rs = pr.executeQuery();\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );"
      },
      "id": "clone_188",
      "clone_type": "type-1",
      "clone": {
        "end_line": 234,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 230,
        "source_code": "pr.setObject( 1, testValue.small);\r\n        pr.setObject( 2, testValue.large);\r\n        rs = pr.executeQuery();\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 213,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 209,
        "source_code": "pr.setObject( 1, testValue.small);\r\n        pr.setObject( 2, testValue.large);\r\n        rs = pr.executeQuery();\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );"
      },
      "id": "clone_189",
      "clone_type": "type-1",
      "clone": {
        "end_line": 246,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 242,
        "source_code": "pr.setObject( 1, testValue.small);\r\n        pr.setObject( 2, testValue.large);\r\n        rs = pr.executeQuery();\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertTrue( \"To few rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 225,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 221,
        "source_code": "pr.setObject( 1, testValue.small);\r\n\t\tpr.setObject( 2, testValue.large);\r\n\t\trs = pr.executeQuery();\r\n\t\tassertTrue( \"To few rows\", rs.next() );\r\n\t\tassertTrue( \"To few rows\", rs.next() );"
      },
      "id": "clone_190",
      "clone_type": "type-1",
      "clone": {
        "end_line": 234,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 230,
        "source_code": "pr.setObject( 1, testValue.small);\r\n\t\tpr.setObject( 2, testValue.large);\r\n\t\trs = pr.executeQuery();\r\n\t\tassertTrue( \"To few rows\", rs.next() );\r\n\t\tassertTrue( \"To few rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 225,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 221,
        "source_code": "pr.setObject( 1, testValue.small);\r\n\t\tpr.setObject( 2, testValue.large);\r\n\t\trs = pr.executeQuery();\r\n\t\tassertTrue( \"To few rows\", rs.next() );\r\n\t\tassertTrue( \"To few rows\", rs.next() );"
      },
      "id": "clone_191",
      "clone_type": "type-1",
      "clone": {
        "end_line": 246,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 242,
        "source_code": "pr.setObject( 1, testValue.small);\r\n\t\tpr.setObject( 2, testValue.large);\r\n\t\trs = pr.executeQuery();\r\n\t\tassertTrue( \"To few rows\", rs.next() );\r\n\t\tassertTrue( \"To few rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 234,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 230,
        "source_code": "pr.setObject( 1, testValue.small);\r\n\t\tpr.setObject( 2, testValue.large);\r\n\t\trs = pr.executeQuery();\r\n\t\tassertTrue( \"To few rows\", rs.next() );\r\n\t\tassertTrue( \"To few rows\", rs.next() );"
      },
      "id": "clone_192",
      "clone_type": "type-1",
      "clone": {
        "end_line": 246,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 242,
        "source_code": "pr.setObject( 1, testValue.small);\r\n\t\tpr.setObject( 2, testValue.large);\r\n\t\trs = pr.executeQuery();\r\n\t\tassertTrue( \"To few rows\", rs.next() );\r\n\t\tassertTrue( \"To few rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 162,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 158,
        "source_code": "assertTrue( \"To few rows\", rs.next() );\r\n        assertEqualsObject( \"Values not equals\", rs.getObject(1), rs.getObject(2), false);\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertEqualsObject( \"Values not equals\", rs.getObject(1), rs.getObject(2), false);\r\n        assertFalse( \"To many rows\", rs.next() );"
      },
      "id": "clone_193",
      "clone_type": "type-1",
      "clone": {
        "end_line": 169,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 165,
        "source_code": "assertTrue( \"To few rows\", rs.next() );\r\n        assertEqualsObject( \"Values not equals\", rs.getObject(1), rs.getObject(2), false);\r\n        assertTrue( \"To few rows\", rs.next() );\r\n        assertEqualsObject( \"Values not equals\", rs.getObject(1), rs.getObject(2), false);\r\n        assertFalse( \"To many rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 141,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 115,
        "source_code": "pr.setObject( 1, testValue.small);\r\n            pr.setObject( 2, testValue.large);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, testValue.small);\r\n            pr.setObject( 2, testValue.small);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, testValue.large);\r\n            pr.setObject( 2, testValue.large);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, testValue.large);\r\n            pr.setObject( 2, testValue.small);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, null);\r\n            pr.setObject( 2, testValue.small);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, testValue.small);\r\n            pr.setObject( 2, null);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, null);\r\n            pr.setObject( 2, null);\r\n            pr.execute();"
      },
      "id": "clone_194",
      "clone_type": "type-1",
      "clone": {
        "end_line": 155,
        "file": "/src/smallsql/junit/TestJoins.java",
        "start_line": 129,
        "source_code": "pr.setObject( 1, testValue.small);\r\n            pr.setObject( 2, testValue.large);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, testValue.small);\r\n            pr.setObject( 2, testValue.small);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, testValue.large);\r\n            pr.setObject( 2, testValue.large);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, testValue.large);\r\n            pr.setObject( 2, testValue.small);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, null);\r\n            pr.setObject( 2, testValue.small);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, testValue.small);\r\n            pr.setObject( 2, null);\r\n            pr.execute();\r\n\r\n            pr.setObject( 1, null);\r\n            pr.setObject( 2, null);\r\n            pr.execute();"
      }
    },
    {
      "origin": {
        "end_line": 691,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 686,
        "source_code": "case SQLTokenizer.INT:\r\n                case SQLTokenizer.REAL:\r\n                case SQLTokenizer.SMALLMONEY:\r\n                case SQLTokenizer.TIME:\r\n                case SQLTokenizer.DATE:\r\n                case SQLTokenizer.SMALLDATETIME:"
      },
      "id": "clone_195",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1429,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1424,
        "source_code": "case SQLTokenizer.INT:\r\n                case SQLTokenizer.REAL:\r\n                case SQLTokenizer.SMALLMONEY:\r\n                case SQLTokenizer.TIME:\r\n                case SQLTokenizer.DATE:\r\n                case SQLTokenizer.SMALLDATETIME:"
      }
    },
    {
      "origin": {
        "end_line": 691,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 686,
        "source_code": "case SQLTokenizer.INT:\r\n                case SQLTokenizer.REAL:\r\n                case SQLTokenizer.SMALLMONEY:\r\n                case SQLTokenizer.TIME:\r\n                case SQLTokenizer.DATE:\r\n                case SQLTokenizer.SMALLDATETIME:"
      },
      "id": "clone_196",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1486,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1481,
        "source_code": "case SQLTokenizer.INT:\r\n                case SQLTokenizer.REAL:\r\n                case SQLTokenizer.SMALLMONEY:\r\n                case SQLTokenizer.TIME:\r\n                case SQLTokenizer.DATE:\r\n                case SQLTokenizer.SMALLDATETIME:"
      }
    },
    {
      "origin": {
        "end_line": 1429,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1424,
        "source_code": "case SQLTokenizer.INT:\r\n            case SQLTokenizer.REAL:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.TIME:\r\n            case SQLTokenizer.DATE:\r\n            case SQLTokenizer.SMALLDATETIME:"
      },
      "id": "clone_197",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1486,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1481,
        "source_code": "case SQLTokenizer.INT:\r\n            case SQLTokenizer.REAL:\r\n            case SQLTokenizer.SMALLMONEY:\r\n            case SQLTokenizer.TIME:\r\n            case SQLTokenizer.DATE:\r\n            case SQLTokenizer.SMALLDATETIME:"
      }
    },
    {
      "origin": {
        "end_line": 420,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 415,
        "source_code": "pr.setBytes (  1, byteArray );\r\n\t            pr.setString(  2 , \"Test\" );\r\n\t            pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r\n\t            pr.setFloat (  4, (float)1234.56789 );\r\n\t            pr.setFloat (  5 , (float)9876.54321 );\r\n\t            pr.setBytes (  6, largeByteArray );"
      },
      "id": "clone_198",
      "clone_type": "type-1",
      "clone": {
        "end_line": 474,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 469,
        "source_code": "pr.setBytes (  1, byteArray );\r\n\t            pr.setString(  2 , \"Test\" );\r\n\t            pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r\n\t            pr.setFloat (  4, (float)1234.56789 );\r\n\t            pr.setFloat (  5 , (float)9876.54321 );\r\n\t            pr.setBytes (  6, largeByteArray );"
      }
    },
    {
      "origin": {
        "end_line": 420,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 415,
        "source_code": "pr.setBytes (  1, byteArray );\r\n\t            pr.setString(  2 , \"Test\" );\r\n\t            pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r\n\t            pr.setFloat (  4, (float)1234.56789 );\r\n\t            pr.setFloat (  5 , (float)9876.54321 );\r\n\t            pr.setBytes (  6, largeByteArray );"
      },
      "id": "clone_199",
      "clone_type": "type-1",
      "clone": {
        "end_line": 528,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 523,
        "source_code": "pr.setBytes (  1, byteArray );\r\n\t            pr.setString(  2 , \"Test\" );\r\n\t            pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r\n\t            pr.setFloat (  4, (float)1234.56789 );\r\n\t            pr.setFloat (  5 , (float)9876.54321 );\r\n\t            pr.setBytes (  6, largeByteArray );"
      }
    },
    {
      "origin": {
        "end_line": 474,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 469,
        "source_code": "pr.setBytes (  1, byteArray );\r\n\t            pr.setString(  2 , \"Test\" );\r\n\t            pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r\n\t            pr.setFloat (  4, (float)1234.56789 );\r\n\t            pr.setFloat (  5 , (float)9876.54321 );\r\n\t            pr.setBytes (  6, largeByteArray );"
      },
      "id": "clone_200",
      "clone_type": "type-1",
      "clone": {
        "end_line": 528,
        "file": "/src/smallsql/junit/BenchTest.java",
        "start_line": 523,
        "source_code": "pr.setBytes (  1, byteArray );\r\n\t            pr.setString(  2 , \"Test\" );\r\n\t            pr.setDate  (  3 , new Date( System.currentTimeMillis() ) );\r\n\t            pr.setFloat (  4, (float)1234.56789 );\r\n\t            pr.setFloat (  5 , (float)9876.54321 );\r\n\t            pr.setBytes (  6, largeByteArray );"
      }
    },
    {
      "origin": {
        "end_line": 525,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 516,
        "source_code": "case SQLTokenizer.LONGVARBINARY:\r\n                    return getBytes();\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\tcase SQLTokenizer.TIMESTAMP:\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\treturn new DateTime( getLong(), dataType );\r\n            case SQLTokenizer.UNIQUEIDENTIFIER:\r\n                    return getBytes();\r\n            default:"
      },
      "id": "clone_201",
      "clone_type": "type-1",
      "clone": {
        "end_line": 91,
        "file": "/src/smallsql/database/ExpressionFunctionReturnP1.java",
        "start_line": 82,
        "source_code": "case SQLTokenizer.LONGVARBINARY:\r\n                    return getBytes();\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\tcase SQLTokenizer.TIMESTAMP:\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\treturn new DateTime( getLong(), dataType );\r\n            case SQLTokenizer.UNIQUEIDENTIFIER:\r\n                    return getBytes();\r\n            default:"
      }
    },
    {
      "origin": {
        "end_line": 351,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 338,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\t\r\n\t\tint count = 1;\r\n\t\twhile(rs.next()){\r\n\t\t\tassertTrue( oldValue.compareTo( (Integer)rs.getObject(\"i\") ) < 0 );\r\n\t\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\tassertEquals( valueCount, count );"
      },
      "id": "clone_202",
      "clone_type": "type-1",
      "clone": {
        "end_line": 436,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 423,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\t\r\n\t\tint count = 1;\r\n\t\twhile(rs.next()){\r\n\t\t\tassertTrue( oldValue.compareTo( (Integer)rs.getObject(\"i\") ) < 0 );\r\n\t\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\tassertEquals( valueCount, count );"
      }
    },
    {
      "origin": {
        "end_line": 977,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 969,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:\r\n                    return readLong();\r\n            case SQLTokenizer.REAL:"
      },
      "id": "clone_203",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1042,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1034,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:\r\n                    return readLong();\r\n            case SQLTokenizer.REAL:"
      }
    },
    {
      "origin": {
        "end_line": 977,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 969,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:\r\n                    return readLong();\r\n            case SQLTokenizer.REAL:"
      },
      "id": "clone_204",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1107,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1099,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:\r\n                    return readLong();\r\n            case SQLTokenizer.REAL:"
      }
    },
    {
      "origin": {
        "end_line": 1042,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1034,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:\r\n                    return readLong();\r\n            case SQLTokenizer.REAL:"
      },
      "id": "clone_205",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1107,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1099,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:\r\n                    return readLong();\r\n            case SQLTokenizer.REAL:"
      }
    },
    {
      "origin": {
        "end_line": 60,
        "file": "/src/smallsql/database/ExpressionFunctionTruncate.java",
        "start_line": 46,
        "source_code": "if(isNull()) return 0;\r\n\t\tfinal int places = param2.getInt();\r\n\t\tdouble value = param1.getDouble();\r\n\t\tlong factor = 1;\r\n\t\tif(places > 0){\r\n\t\t\tfor(int i=0; i<places; i++){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue *= factor;\r\n\t\t}else{\r\n\t\t\tfor(int i=0; i>places; i--){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue /= factor;\r\n\t\t}"
      },
      "id": "clone_206",
      "clone_type": "type-1",
      "clone": {
        "end_line": 60,
        "file": "/src/smallsql/database/ExpressionFunctionRound.java",
        "start_line": 46,
        "source_code": "if(isNull()) return 0;\r\n\t\tfinal int places = param2.getInt();\r\n\t\tdouble value = param1.getDouble();\r\n\t\tlong factor = 1;\r\n\t\tif(places > 0){\r\n\t\t\tfor(int i=0; i<places; i++){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue *= factor;\r\n\t\t}else{\r\n\t\t\tfor(int i=0; i>places; i--){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue /= factor;\r\n\t\t}"
      }
    },
    {
      "origin": {
        "end_line": 227,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 221,
        "source_code": "pr.setObject( 1, testValue.small);\r\n\t\tpr.setObject( 2, testValue.large);\r\n\t\trs = pr.executeQuery();\r\n\t\tassertTrue( \"To few rows\", rs.next() );\r\n\t\tassertTrue( \"To few rows\", rs.next() );\r\n\t\tassertFalse( \"To many rows\", rs.next() );\r\n\t\tpr.close();"
      },
      "id": "clone_207",
      "clone_type": "type-1",
      "clone": {
        "end_line": 248,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 242,
        "source_code": "pr.setObject( 1, testValue.small);\r\n\t\tpr.setObject( 2, testValue.large);\r\n\t\trs = pr.executeQuery();\r\n\t\tassertTrue( \"To few rows\", rs.next() );\r\n\t\tassertTrue( \"To few rows\", rs.next() );\r\n\t\tassertFalse( \"To many rows\", rs.next() );\r\n\t\tpr.close();"
      }
    },
    {
      "origin": {
        "end_line": 155,
        "file": "/src/smallsql/junit/TestOperatoren.java",
        "start_line": 150,
        "source_code": "Connection con = AllTests.getConnection();\r\n        Statement st = con.createStatement();\r\n        ResultSet rs;\r\n\r\n        rs = st.executeQuery(\"Select * from \" + table + \" where 1 = 0\");\r\n        assertFalse( \"To many rows\", rs.next() );"
      },
      "id": "clone_208",
      "clone_type": "type-1",
      "clone": {
        "end_line": 164,
        "file": "/src/smallsql/junit/TestJoins.java",
        "start_line": 159,
        "source_code": "Connection con = AllTests.getConnection();\r\n        Statement st = con.createStatement();\r\n        ResultSet rs;\r\n\r\n        rs = st.executeQuery(\"Select * from \" + table + \" where 1 = 0\");\r\n        assertFalse( \"To many rows\", rs.next() );"
      }
    },
    {
      "origin": {
        "end_line": 506,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 478,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return getBoolean() ? Boolean.TRUE : Boolean.FALSE;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:\r\n                    return getBytes();\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n                    return new Integer( getInt() );\r\n            case SQLTokenizer.BIGINT:\r\n                    return new Long( getLong() );\r\n            case SQLTokenizer.REAL:\r\n                    return new Float( getFloat() );\r\n            case SQLTokenizer.FLOAT:\r\n            case SQLTokenizer.DOUBLE:\r\n                    return new Double( getDouble() );\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n                    return Money.createFromUnscaledValue( getMoney() );\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:\r\n                    return getNumeric();\r\n            case SQLTokenizer.CHAR:\r\n            case SQLTokenizer.NCHAR:\r\n            case SQLTokenizer.VARCHAR:\r\n            case SQLTokenizer.NVARCHAR:\r\n            case SQLTokenizer.LONGNVARCHAR:\r\n            case SQLTokenizer.LONGVARCHAR:"
      },
      "id": "clone_209",
      "clone_type": "type-1",
      "clone": {
        "end_line": 80,
        "file": "/src/smallsql/database/ExpressionFunctionReturnP1.java",
        "start_line": 52,
        "source_code": "case SQLTokenizer.BIT:\r\n            case SQLTokenizer.BOOLEAN:\r\n                    return getBoolean() ? Boolean.TRUE : Boolean.FALSE;\r\n            case SQLTokenizer.BINARY:\r\n            case SQLTokenizer.VARBINARY:\r\n                    return getBytes();\r\n            case SQLTokenizer.TINYINT:\r\n            case SQLTokenizer.SMALLINT:\r\n            case SQLTokenizer.INT:\r\n                    return new Integer( getInt() );\r\n            case SQLTokenizer.BIGINT:\r\n                    return new Long( getLong() );\r\n            case SQLTokenizer.REAL:\r\n                    return new Float( getFloat() );\r\n            case SQLTokenizer.FLOAT:\r\n            case SQLTokenizer.DOUBLE:\r\n                    return new Double( getDouble() );\r\n            case SQLTokenizer.MONEY:\r\n            case SQLTokenizer.SMALLMONEY:\r\n                    return Money.createFromUnscaledValue( getMoney() );\r\n            case SQLTokenizer.NUMERIC:\r\n            case SQLTokenizer.DECIMAL:\r\n                    return getNumeric();\r\n            case SQLTokenizer.CHAR:\r\n            case SQLTokenizer.NCHAR:\r\n            case SQLTokenizer.VARCHAR:\r\n            case SQLTokenizer.NVARCHAR:\r\n            case SQLTokenizer.LONGNVARCHAR:\r\n            case SQLTokenizer.LONGVARCHAR:"
      }
    },
    {
      "origin": {
        "end_line": 469,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 464,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\treturn buf.toString();"
      },
      "id": "clone_210",
      "clone_type": "type-1",
      "clone": {
        "end_line": 564,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 559,
        "source_code": "formatNumber( details.hour, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.second, 2, buf);\r\n\t\t\t\treturn buf.toString();"
      }
    },
    {
      "origin": {
        "end_line": 134,
        "file": "/src/smallsql/junit/BasicTestCase.java",
        "start_line": 130,
        "source_code": "int k=tmp.length-1;\r\n                for(; k>= 0; k--) if(tmp[k] != 0) break;\r\n                k++;\r\n                byte[] tmp2 = new byte[k];\r\n                System.arraycopy( tmp, 0, tmp2, 0, k);"
      },
      "id": "clone_211",
      "clone_type": "type-1",
      "clone": {
        "end_line": 147,
        "file": "/src/smallsql/junit/BasicTestCase.java",
        "start_line": 143,
        "source_code": "int k=tmp.length-1;\r\n                for(; k>= 0; k--) if(tmp[k] != 0) break;\r\n                k++;\r\n                byte[] tmp2 = new byte[k];\r\n                System.arraycopy( tmp, 0, tmp2, 0, k);"
      }
    },
    {
      "origin": {
        "end_line": 313,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 309,
        "source_code": "formatNumber( details.year,  4, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.month + 1, 2, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.day,   2, buf );"
      },
      "id": "clone_212",
      "clone_type": "type-1",
      "clone": {
        "end_line": 557,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 553,
        "source_code": "formatNumber( details.year,  4, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.month + 1, 2, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.day,   2, buf );"
      }
    },
    {
      "origin": {
        "end_line": 313,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 309,
        "source_code": "formatNumber( details.year,  4, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.month + 1, 2, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.day,   2, buf );"
      },
      "id": "clone_213",
      "clone_type": "type-1",
      "clone": {
        "end_line": 571,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 567,
        "source_code": "formatNumber( details.year,  4, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.month + 1, 2, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.day,   2, buf );"
      }
    },
    {
      "origin": {
        "end_line": 313,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 309,
        "source_code": "formatNumber( details.year,  4, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.month + 1, 2, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.day,   2, buf );"
      },
      "id": "clone_214",
      "clone_type": "type-1",
      "clone": {
        "end_line": 587,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 583,
        "source_code": "formatNumber( details.year,  4, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.month + 1, 2, buf );\r\n\t\t\tbuf.append('-');\r\n\t\t\tformatNumber( details.day,   2, buf );"
      }
    },
    {
      "origin": {
        "end_line": 557,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 553,
        "source_code": "formatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.day, 2, buf);"
      },
      "id": "clone_215",
      "clone_type": "type-1",
      "clone": {
        "end_line": 571,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 567,
        "source_code": "formatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.day, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 557,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 553,
        "source_code": "formatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.day, 2, buf);"
      },
      "id": "clone_216",
      "clone_type": "type-1",
      "clone": {
        "end_line": 587,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 583,
        "source_code": "formatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.day, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 571,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 567,
        "source_code": "formatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.day, 2, buf);"
      },
      "id": "clone_217",
      "clone_type": "type-1",
      "clone": {
        "end_line": 587,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 583,
        "source_code": "formatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('-');\r\n\t\t\t\tformatNumber( details.day, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 665,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 657,
        "source_code": "case IN:\r\n\t\t\t\t\t\tcase EQUALS_NULL:\r\n\t\t\t\t\t\tcase EQUALS:    return comp == 0;\r\n\t\t\t\t\t\tcase GREATER:   return comp >  0;\r\n\t\t\t\t\t\tcase GRE_EQU:   return comp >= 0;\r\n\t\t\t\t\t\tcase LESSER:    return comp <  0;\r\n\t\t\t\t\t\tcase LES_EQU:   return comp <= 0;\r\n\t\t\t\t\t\tcase UNEQUALS:  return comp != 0;\r\n\t\t\t\t\t\tcase BETWEEN:"
      },
      "id": "clone_218",
      "clone_type": "type-1",
      "clone": {
        "end_line": 690,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 682,
        "source_code": "case IN:\r\n\t\t\t\t\t\tcase EQUALS_NULL:\r\n\t\t\t\t\t\tcase EQUALS:    return comp == 0;\r\n\t\t\t\t\t\tcase GREATER:   return comp >  0;\r\n\t\t\t\t\t\tcase GRE_EQU:   return comp >= 0;\r\n\t\t\t\t\t\tcase LESSER:    return comp <  0;\r\n\t\t\t\t\t\tcase LES_EQU:   return comp <= 0;\r\n\t\t\t\t\t\tcase UNEQUALS:  return comp != 0;\r\n\t\t\t\t\t\tcase BETWEEN:"
      }
    },
    {
      "origin": {
        "end_line": 665,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 657,
        "source_code": "case IN:\r\n\t\t\t\t\t\tcase EQUALS_NULL:\r\n\t\t\t\t\t\tcase EQUALS:    return comp == 0;\r\n\t\t\t\t\t\tcase GREATER:   return comp >  0;\r\n\t\t\t\t\t\tcase GRE_EQU:   return comp >= 0;\r\n\t\t\t\t\t\tcase LESSER:    return comp <  0;\r\n\t\t\t\t\t\tcase LES_EQU:   return comp <= 0;\r\n\t\t\t\t\t\tcase UNEQUALS:  return comp != 0;\r\n\t\t\t\t\t\tcase BETWEEN:"
      },
      "id": "clone_219",
      "clone_type": "type-1",
      "clone": {
        "end_line": 712,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 704,
        "source_code": "case IN:\r\n\t\t\t\t\t\tcase EQUALS_NULL:\r\n\t\t\t\t\t\tcase EQUALS:    return comp == 0;\r\n\t\t\t\t\t\tcase GREATER:   return comp >  0;\r\n\t\t\t\t\t\tcase GRE_EQU:   return comp >= 0;\r\n\t\t\t\t\t\tcase LESSER:    return comp <  0;\r\n\t\t\t\t\t\tcase LES_EQU:   return comp <= 0;\r\n\t\t\t\t\t\tcase UNEQUALS:  return comp != 0;\r\n\t\t\t\t\t\tcase BETWEEN:"
      }
    },
    {
      "origin": {
        "end_line": 690,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 682,
        "source_code": "case IN:\r\n\t\t\t\t\t\tcase EQUALS_NULL:\r\n                        case EQUALS:    return comp == 0;\r\n                        case GREATER:   return comp >  0;\r\n                        case GRE_EQU:   return comp >= 0;\r\n                        case LESSER:    return comp <  0;\r\n                        case LES_EQU:   return comp <= 0;\r\n                        case UNEQUALS:  return comp != 0;\r\n                        case BETWEEN:"
      },
      "id": "clone_220",
      "clone_type": "type-1",
      "clone": {
        "end_line": 712,
        "file": "/src/smallsql/database/ExpressionArithmetic.java",
        "start_line": 704,
        "source_code": "case IN:\r\n\t\t\t\t\t\tcase EQUALS_NULL:\r\n                        case EQUALS:    return comp == 0;\r\n                        case GREATER:   return comp >  0;\r\n                        case GRE_EQU:   return comp >= 0;\r\n                        case LESSER:    return comp <  0;\r\n                        case LES_EQU:   return comp <= 0;\r\n                        case UNEQUALS:  return comp != 0;\r\n                        case BETWEEN:"
      }
    },
    {
      "origin": {
        "end_line": 135,
        "file": "/src/smallsql/database/SSResultSetMetaData.java",
        "start_line": 131,
        "source_code": "return 10;\r\n\t\t\tcase SQLTokenizer.BIGINT:\r\n            case SQLTokenizer.MONEY:\r\n\t\t\t\treturn 19;\r\n            case SQLTokenizer.REAL:"
      },
      "id": "clone_221",
      "clone_type": "type-1",
      "clone": {
        "end_line": 178,
        "file": "/src/smallsql/database/SSResultSetMetaData.java",
        "start_line": 174,
        "source_code": "return 10;\r\n\t\t\tcase SQLTokenizer.BIGINT:\r\n            case SQLTokenizer.MONEY:\r\n\t\t\t\treturn 19;\r\n            case SQLTokenizer.REAL:"
      }
    },
    {
      "origin": {
        "end_line": 157,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 152,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");"
      },
      "id": "clone_222",
      "clone_type": "type-1",
      "clone": {
        "end_line": 184,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 179,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");"
      }
    },
    {
      "origin": {
        "end_line": 157,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 152,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");"
      },
      "id": "clone_223",
      "clone_type": "type-1",
      "clone": {
        "end_line": 804,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 799,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");"
      }
    },
    {
      "origin": {
        "end_line": 157,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 152,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");"
      },
      "id": "clone_224",
      "clone_type": "type-1",
      "clone": {
        "end_line": 808,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 803,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");"
      }
    },
    {
      "origin": {
        "end_line": 184,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 179,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");"
      },
      "id": "clone_225",
      "clone_type": "type-1",
      "clone": {
        "end_line": 804,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 799,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");"
      }
    },
    {
      "origin": {
        "end_line": 184,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 179,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");"
      },
      "id": "clone_226",
      "clone_type": "type-1",
      "clone": {
        "end_line": 808,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 803,
        "source_code": "assertTrue( rs.next() );\r\n\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\tassertTrue( rs.next() );\r\n\t\toldValue = rs.getString(\"v\");"
      }
    },
    {
      "origin": {
        "end_line": 804,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 799,
        "source_code": "assertTrue( rs.next() );\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\t\r\n\t\tassertTrue( rs.next() );\t\t\r\n\t\toldValue = rs.getString(\"v\");"
      },
      "id": "clone_227",
      "clone_type": "type-1",
      "clone": {
        "end_line": 808,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 803,
        "source_code": "assertTrue( rs.next() );\t\t\r\n\t\toldValue = rs.getString(\"v\");\r\n\t\tassertNull(oldValue);\r\n\t\t\r\n\t\tassertTrue( rs.next() );\t\t\r\n\t\toldValue = rs.getString(\"v\");"
      }
    },
    {
      "origin": {
        "end_line": 359,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 351,
        "source_code": "buf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatHour12( details.hour, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);"
      },
      "id": "clone_228",
      "clone_type": "type-1",
      "clone": {
        "end_line": 480,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 472,
        "source_code": "buf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatHour12( details.hour, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 1316,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1304,
        "source_code": "case SQLTokenizer.CHAR:\r\n            case SQLTokenizer.NCHAR:\r\n            case SQLTokenizer.VARCHAR:\r\n            case SQLTokenizer.NVARCHAR:\r\n                    return readString();\r\n\t\t\tcase SQLTokenizer.CLOB:\r\n\t\t\tcase SQLTokenizer.NCLOB:\r\n            case SQLTokenizer.LONGNVARCHAR:\r\n            case SQLTokenizer.LONGVARCHAR:\r\n                    return readLongString();\r\n            case SQLTokenizer.JAVA_OBJECT:\r\n                    ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r\n                    ObjectInputStream ois = new ObjectInputStream(bais);"
      },
      "id": "clone_229",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1383,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1371,
        "source_code": "case SQLTokenizer.CHAR:\r\n            case SQLTokenizer.NCHAR:\r\n            case SQLTokenizer.VARCHAR:\r\n            case SQLTokenizer.NVARCHAR:\r\n                    return readString();\r\n\t\t\tcase SQLTokenizer.CLOB:\r\n\t\t\tcase SQLTokenizer.NCLOB:\r\n            case SQLTokenizer.LONGNVARCHAR:\r\n            case SQLTokenizer.LONGVARCHAR:\r\n                    return readLongString();\r\n            case SQLTokenizer.JAVA_OBJECT:\r\n                    ByteArrayInputStream bais = new ByteArrayInputStream(readLongBinary());\r\n                    ObjectInputStream ois = new ObjectInputStream(bais);"
      }
    },
    {
      "origin": {
        "end_line": 359,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 354,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatHour12( details.hour, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);"
      },
      "id": "clone_230",
      "clone_type": "type-1",
      "clone": {
        "end_line": 480,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 475,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatHour12( details.hour, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 359,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 354,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatHour12( details.hour, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);"
      },
      "id": "clone_231",
      "clone_type": "type-1",
      "clone": {
        "end_line": 606,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 601,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatHour12( details.hour, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 480,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 475,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatHour12( details.hour, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);"
      },
      "id": "clone_232",
      "clone_type": "type-1",
      "clone": {
        "end_line": 606,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 601,
        "source_code": "buf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatHour12( details.hour, buf );\r\n\t\t\t\tbuf.append(':');\r\n\t\t\t\tformatNumber( details.minute, 2, buf);"
      }
    },
    {
      "origin": {
        "end_line": 725,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 707,
        "source_code": "//jetzt irgendwo in die Mitte scrollen\r\n\t\trs.next();\r\n\t\trs.next();\r\n\t\trs.previous(); //dann soll der Zeiger nicht am Ende des bereits gefetchten stehen\r\n\t\t\r\n\t\trs.last();\r\n\t\tcount = 0;\r\n\t\twhile(rs.previous()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );\r\n\r\n\t\trs.beforeFirst();\r\n\t\tcount = -1;\r\n\t\twhile(rs.next()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );\r\n\r\n\t\trs.beforeFirst();\r\n\t\tcount = -1;\r\n\t\twhile(rs.next()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );"
      },
      "id": "clone_233",
      "clone_type": "type-1",
      "clone": {
        "end_line": 756,
        "file": "/src/smallsql/junit/TestOrderBy.java",
        "start_line": 738,
        "source_code": "//jetzt irgendwo in die Mitte scrollen\r\n\t\trs.next();\r\n\t\trs.next();\r\n\t\trs.previous(); //dann soll der Zeiger nicht am Ende des bereits gefetchten stehen\r\n\t\t\r\n\t\trs.last();\r\n\t\tcount = 0;\r\n\t\twhile(rs.previous()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );\r\n\r\n\t\trs.beforeFirst();\r\n\t\tcount = -1;\r\n\t\twhile(rs.next()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );\r\n\r\n\t\trs.beforeFirst();\r\n\t\tcount = -1;\r\n\t\twhile(rs.next()) count++;\t\t\r\n\t\tassertEquals( valueCount, count );"
      }
    },
    {
      "origin": {
        "end_line": 507,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 503,
        "source_code": "buf.append('/');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('/');\r\n\t\t\t\tformatNumber( details.day, 2, buf);\r\n\t\t\t\treturn buf.toString();"
      },
      "id": "clone_234",
      "clone_type": "type-1",
      "clone": {
        "end_line": 514,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 510,
        "source_code": "buf.append('/');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('/');\r\n\t\t\t\tformatNumber( details.day, 2, buf);\r\n\t\t\t\treturn buf.toString();"
      }
    },
    {
      "origin": {
        "end_line": 382,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 378,
        "source_code": "buf.append('.');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('.');\r\n\t\t\t\tformatNumber( details.day, 2, buf);\r\n\t\t\t\treturn buf.toString();"
      },
      "id": "clone_235",
      "clone_type": "type-1",
      "clone": {
        "end_line": 389,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 385,
        "source_code": "buf.append('.');\r\n\t\t\t\tformatNumber( details.month+1, 2, buf);\r\n\t\t\t\tbuf.append('.');\r\n\t\t\t\tformatNumber( details.day, 2, buf);\r\n\t\t\t\treturn buf.toString();"
      }
    },
    {
      "origin": {
        "end_line": 121,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 113,
        "source_code": "con.createStatement().execute(\"Create Table transactions (i int identity, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from transactions\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into transactions(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from transactions\");\r\n\r\n\t\t\tcon.setAutoCommit(false);\r\n\t\t\tcon.createStatement().execute(\"Insert Into transactions(v) Select v From transactions\");\r\n\t\t\tassertRowCount( 2, \"Select * from transactions\");"
      },
      "id": "clone_236",
      "clone_type": "type-1",
      "clone": {
        "end_line": 180,
        "file": "/src/smallsql/junit/TestTransactions.java",
        "start_line": 172,
        "source_code": "con.createStatement().execute(\"Create Table transactions (i int identity, v varchar(20))\");\r\n\t\t\tassertRowCount( 0, \"Select * from transactions\");\r\n\r\n\t\t\tcon.createStatement().execute(\"Insert Into transactions(v) Values('qwert')\");\r\n\t\t\tassertRowCount( 1, \"Select * from transactions\");\r\n\r\n\t\t\tcon.setAutoCommit(false);\r\n\t\t\tcon.createStatement().execute(\"Insert Into transactions(v) Select v From transactions\");\r\n\t\t\tassertRowCount( 2, \"Select * from transactions\");"
      }
    },
    {
      "origin": {
        "end_line": 1045,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1034,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:\r\n                    return readLong();\r\n            case SQLTokenizer.REAL:\r\n                    return readFloat();\r\n            case SQLTokenizer.FLOAT:\r\n            case SQLTokenizer.DOUBLE:"
      },
      "id": "clone_237",
      "clone_type": "type-1",
      "clone": {
        "end_line": 1110,
        "file": "/src/smallsql/database/StoreImpl.java",
        "start_line": 1099,
        "source_code": "case SQLTokenizer.TINYINT:\r\n                    return readUnsignedByte();\r\n            case SQLTokenizer.SMALLINT:\r\n                    return readShort();\r\n            case SQLTokenizer.INT:\r\n                    return readInt();\r\n            case SQLTokenizer.BIGINT:\r\n                    return readLong();\r\n            case SQLTokenizer.REAL:\r\n                    return readFloat();\r\n            case SQLTokenizer.FLOAT:\r\n            case SQLTokenizer.DOUBLE:"
      }
    },
    {
      "origin": {
        "end_line": 90,
        "file": "/src/smallsql/database/TableView.java",
        "start_line": 85,
        "source_code": "raFile = Utils.openRaFile( file, database.isReadOnly() );\r\n\t\t\tByteBuffer buffer = ByteBuffer.allocate(8);\r\n\t\t\traFile.read(buffer);\r\n\t\t\tbuffer.position(0);\r\n\t\t\tint magic   = buffer.getInt();\r\n\t\t\tint version = buffer.getInt();"
      },
      "id": "clone_238",
      "clone_type": "type-1",
      "clone": {
        "end_line": 178,
        "file": "/src/smallsql/database/IndexDescription.java",
        "start_line": 173,
        "source_code": "raFile = Utils.openRaFile( file, database.isReadOnly() );\r\n\t\t\tByteBuffer buffer = ByteBuffer.allocate(8);\r\n\t\t\traFile.read(buffer);\r\n\t\t\tbuffer.position(0);\r\n\t\t\tint magic   = buffer.getInt();\r\n\t\t\tint version = buffer.getInt();"
      }
    },
    {
      "origin": {
        "end_line": 476,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 471,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\treturn ((DateTime)obj).getTimeMillis();\r\n            default:"
      },
      "id": "clone_239",
      "clone_type": "type-1",
      "clone": {
        "end_line": 509,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 504,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\treturn ((DateTime)obj).getTimeMillis();\r\n            default:"
      }
    },
    {
      "origin": {
        "end_line": 476,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 471,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\treturn ((DateTime)obj).getTimeMillis();\r\n            default:"
      },
      "id": "clone_240",
      "clone_type": "type-1",
      "clone": {
        "end_line": 532,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 527,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\treturn ((DateTime)obj).getTimeMillis();\r\n            default:"
      }
    },
    {
      "origin": {
        "end_line": 509,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 504,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\treturn ((DateTime)obj).getTimeMillis();\r\n            default:"
      },
      "id": "clone_241",
      "clone_type": "type-1",
      "clone": {
        "end_line": 532,
        "file": "/src/smallsql/database/ExpressionValue.java",
        "start_line": 527,
        "source_code": "case SQLTokenizer.TIMESTAMP:\r\n\t\t\tcase SQLTokenizer.TIME:\r\n\t\t\tcase SQLTokenizer.DATE:\r\n\t\t\tcase SQLTokenizer.SMALLDATETIME:\r\n\t\t\t\treturn ((DateTime)obj).getTimeMillis();\r\n            default:"
      }
    },
    {
      "origin": {
        "end_line": 444,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 440,
        "source_code": "formatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tbuf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);"
      },
      "id": "clone_242",
      "clone_type": "type-1",
      "clone": {
        "end_line": 531,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 527,
        "source_code": "formatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tbuf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);"
      }
    },
    {
      "origin": {
        "end_line": 444,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 440,
        "source_code": "formatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tbuf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);"
      },
      "id": "clone_243",
      "clone_type": "type-1",
      "clone": {
        "end_line": 602,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 598,
        "source_code": "formatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tbuf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);"
      }
    },
    {
      "origin": {
        "end_line": 531,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 527,
        "source_code": "formatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tbuf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);"
      },
      "id": "clone_244",
      "clone_type": "type-1",
      "clone": {
        "end_line": 602,
        "file": "/src/smallsql/database/DateTime.java",
        "start_line": 598,
        "source_code": "formatNumber( details.day, 2, buf);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tbuf.append( SHORT_MONTHS[ details.month ]);\r\n\t\t\t\tbuf.append(' ');\r\n\t\t\t\tformatNumber( details.year, 4, buf);"
      }
    }
  ],
  "biggest_class_lines": 29,
  "volume": 23696,
  "clone_class_num": 91,
  "total_clone_size": 1272
}